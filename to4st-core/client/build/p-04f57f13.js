import{S as a}from"./p-e088c0a0.js";class e{static get(e){return{appInfo:async(s=!0)=>(await e.client.query(((e=!0)=>a.query({appConfig:[{cached:e},{instanceId:!0,publicStats:!0,publicBanQuery:!0,banlistPartners:!0,masterserverKey:!0,steamWebApiKey:!0,ownAddress:!0,minScoreStats:!0,playerStatsCacheAge:!0,appInfo:{uniquePlayers:!0,gamesPlayed:!0,roundsPlayed:!0,activeBans:!0}}]}))(s))).appConfig,createUpdateAppConfig:async s=>(await e.client.mutation((e=>a.mutation({updateAppConfig:[{appConfig:e},{instanceId:!0,publicStats:!0,publicBanQuery:!0,banlistPartners:!0,masterserverKey:!0,steamWebApiKey:!0,ownAddress:!0,minScoreStats:!0,playerStatsCacheAge:!0,appInfo:{uniquePlayers:!0,gamesPlayed:!0,roundsPlayed:!0,activeBans:!0}}]}))(s))).updateAppConfig,login:async s=>(await e.client.mutation((e=>a.mutation({login:[{password:e},{jwt:!0,appConfig:{instanceId:!0,publicStats:!0,publicBanQuery:!0,banlistPartners:!0,masterserverKey:!0,steamWebApiKey:!0,ownAddress:!0,minScoreStats:!0,playerStatsCacheAge:!0,appInfo:{uniquePlayers:!0,gamesPlayed:!0,roundsPlayed:!0,activeBans:!0}}}]}))(s))).login,authValid:async()=>(await e.client.query({authValid:!0})).authValid}}}export{e as A}