import{r as e,h as t,g as a,a as n,c as s,H as r}from"./p-a65b63bc.js";import{A as i}from"./p-328a7a74.js";import"./p-6b2e8e6d.js";import{d as o,a as p}from"./p-7d85979a.js";import{h as l,e as d}from"./p-54bb4b03.js";const y=new RegExp(["(\\\\.)","(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?"].join("|"),"g"),c=e=>e.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),u=e=>e.replace(/([=!:$/()])/g,"\\$1"),g=e=>e&&e.sensitive?"":"i",m=(e,t,a)=>{for(var n=(a=a||{}).strict,s=!1!==a.end,r=c(a.delimiter||"/"),i=a.delimiters||"./",o=[].concat(a.endsWith||[]).map(c).concat("$").join("|"),p="",l=!1,d=0;d<e.length;d++){var y=e[d];if("string"==typeof y)p+=c(y),l=d===e.length-1&&i.indexOf(y[y.length-1])>-1;else{var u=c(y.prefix||""),m=y.repeat?"(?:"+y.pattern+")(?:"+u+"(?:"+y.pattern+"))*":y.pattern;t&&t.push(y),p+=y.optional?y.partial?u+"("+m+")?":"(?:"+u+"("+m+"))?":u+"("+m+")"}}return s?(n||(p+="(?:"+r+")?"),p+="$"===o?"$":"(?="+o+")"):(n||(p+="(?:"+r+"(?="+o+"))?"),l||(p+="(?="+r+"|"+o+")")),new RegExp("^"+p,g(a))},h=(e,t,a)=>e instanceof RegExp?((e,t)=>{if(!t)return e;var a=e.source.match(/\((?!\?)/g);if(a)for(var n=0;n<a.length;n++)t.push({name:n,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,pattern:null});return e})(e,t):Array.isArray(e)?((e,t,a)=>{for(var n=[],s=0;s<e.length;s++)n.push(h(e[s],t,a).source);return new RegExp("(?:"+n.join("|")+")",g(a))})(e,t,a):((e,t,a)=>m(((e,t)=>{for(var a,n=[],s=0,r=0,i="",o=t&&t.delimiter||"/",p=t&&t.delimiters||"./",l=!1;null!==(a=y.exec(e));){var d=a[0],g=a[1],m=a.index;if(i+=e.slice(r,m),r=m+d.length,g)i+=g[1],l=!0;else{var h="",S=e[r],f=a[2],I=a[3],v=a[4],P=a[5];if(!l&&i.length){var b=i.length-1;p.indexOf(i[b])>-1&&(h=i[b],i=i.slice(0,b))}i&&(n.push(i),i="",l=!1);var R=h||o,B=I||v;n.push({name:f||s++,prefix:h,delimiter:R,optional:"?"===P||"*"===P,repeat:"+"===P||"*"===P,partial:""!==h&&void 0!==S&&S!==h,pattern:B?u(B):"[^"+c(R)+"]+?"})}}return(i||r<e.length)&&n.push(i+e.substr(r)),n})(e,a),t,a))(e,t,a),S=(e,t)=>new RegExp("^"+t+"(\\/|\\?|#|$)","i").test(e),f=(e,t)=>S(e,t)?e.substr(t.length):e,I=e=>"/"===e.charAt(e.length-1)?e.slice(0,-1):e,v=e=>"/"===e.charAt(0)?e:"/"+e,P=e=>"/"===e.charAt(0)?e.substr(1):e,b=e=>{const{pathname:t,search:a,hash:n}=e;let s=t||"/";return a&&"?"!==a&&(s+="?"===a.charAt(0)?a:"?"+a),n&&"#"!==n&&(s+="#"===n.charAt(0)?n:"#"+n),s},R=e=>"/"===e.charAt(0),B=e=>Math.random().toString(36).substr(2,e),_=(e,t)=>{for(let a=t,n=a+1,s=e.length;n<s;a+=1,n+=1)e[a]=e[n];e.pop()},A=(e,t)=>{if(e===t)return!0;if(null==e||null==t)return!1;if(Array.isArray(e))return Array.isArray(t)&&e.length===t.length&&e.every((e,a)=>A(e,t[a]));const a=typeof e;if(a!==typeof t)return!1;if("object"===a){const a=e.valueOf(),n=t.valueOf();if(a!==e||n!==t)return A(a,n);const s=Object.keys(e),r=Object.keys(t);return s.length===r.length&&s.every(a=>A(e[a],t[a]))}return!1},C=(e,t,a,n)=>{let s;"string"==typeof e?(s=(e=>{let t=e||"/",a="",n="";const s=t.indexOf("#");-1!==s&&(n=t.substr(s),t=t.substr(0,s));const r=t.indexOf("?");return-1!==r&&(a=t.substr(r),t=t.substr(0,r)),{pathname:t,search:"?"===a?"":a,hash:"#"===n?"":n,query:{},key:""}})(e),void 0!==t&&(s.state=t)):(s=Object.assign({pathname:""},e),s.search&&"?"!==s.search.charAt(0)&&(s.search="?"+s.search),s.hash&&"#"!==s.hash.charAt(0)&&(s.hash="#"+s.hash),void 0!==t&&void 0===s.state&&(s.state=t));try{s.pathname=decodeURI(s.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+s.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}var r;return s.key=a,n?s.pathname?"/"!==s.pathname.charAt(0)&&(s.pathname=((e,t="")=>{let a,n=t&&t.split("/")||[],s=0;const r=e&&e.split("/")||[],i=e&&R(e),o=t&&R(t),p=i||o;if(e&&R(e)?n=r:r.length&&(n.pop(),n=n.concat(r)),!n.length)return"/";if(n.length){const e=n[n.length-1];a="."===e||".."===e||""===e}else a=!1;for(let e=n.length;e>=0;e--){const t=n[e];"."===t?_(n,e):".."===t?(_(n,e),s++):s&&(_(n,e),s--)}if(!p)for(;s--;s)n.unshift("..");!p||""===n[0]||n[0]&&R(n[0])||n.unshift("");let l=n.join("/");return a&&"/"!==l.substr(-1)&&(l+="/"),l})(s.pathname,n.pathname)):s.pathname=n.pathname:s.pathname||(s.pathname="/"),s.query=(r=s.search||"")?(/^[?#]/.test(r)?r.slice(1):r).split("&").reduce((e,t)=>{let[a,n]=t.split("=");return e[a]=n?decodeURIComponent(n.replace(/\+/g," ")):"",e},{}):{},s};let w=0;const T={},k=(e,t={})=>{"string"==typeof t&&(t={path:t});const{path:a="/",exact:n=!1,strict:s=!1}=t,{re:r,keys:i}=((e,t)=>{const a=`${t.end}${t.strict}`,n=T[a]||(T[a]={}),s=JSON.stringify(e);if(n[s])return n[s];const r=[],i={re:h(e,r,t),keys:r};return w<1e4&&(n[s]=i,w+=1),i})(a,{end:n,strict:s}),o=r.exec(e);if(!o)return null;const[p,...l]=o,d=e===p;return n&&!d?null:{path:a,url:"/"===a&&""===p?"/":p,isExact:d,params:i.reduce((e,t,a)=>(e[t.name]=l[a],e),{})}},G=class{constructor(t){e(this,t),this.group=null,this.match=null,this.componentProps={},this.exact=!1,this.scrollOnNextRender=!1,this.previousMatch=null}computeMatch(e){const t=null!=this.group||null!=this.el.parentElement&&"stencil-route-switch"===this.el.parentElement.tagName.toLowerCase();if(e&&!t)return this.previousMatch=this.match,this.match=k(e.pathname,{path:this.url,exact:this.exact,strict:!0})}async loadCompleted(){let e={};var t,a;this.history&&this.history.location.hash?e={scrollToId:this.history.location.hash.substr(1)}:this.scrollTopOffset&&(e={scrollTopOffset:this.scrollTopOffset}),"function"==typeof this.componentUpdated?this.componentUpdated(e):!this.match||(a=this.previousMatch,null==(t=this.match)&&null==a||null!=a&&t&&a&&t.path===a.path&&t.url===a.url&&A(t.params,a.params))||!this.routeViewsUpdated||this.routeViewsUpdated(e)}async componentDidUpdate(){await this.loadCompleted()}async componentDidLoad(){await this.loadCompleted()}render(){if(!this.match||!this.history)return null;const e=Object.assign({},this.componentProps,{history:this.history,match:this.match});return this.routeRender?this.routeRender(Object.assign({},e,{component:this.component})):this.component?t(this.component,Object.assign({},e)):void 0}get el(){return a(this)}static get watchers(){return{location:["computeMatch"]}}};i.injectProps(G,["location","history","historyType","routeViewsUpdated"]),G.style="stencil-route.inactive{display:none}";const D=(e,t,a)=>a(e.confirm(t)),Q=(e,t)=>{const a=e[t],n="__storage_test__";try{return a.setItem(n,n),a.removeItem(n),!0}catch(e){return e instanceof DOMException&&(22===e.code||1014===e.code||"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name)&&0!==a.length}},U=class{constructor(t){e(this,t),this.unsubscribe=()=>{},this.activeClass="link-active",this.exact=!1,this.strict=!0,this.custom="a",this.match=null}componentWillLoad(){this.computeMatch()}computeMatch(){this.location&&(this.match=k(this.location.pathname,{path:this.urlMatch||this.url,exact:this.exact,strict:this.strict}))}handleClick(e){var t,a,n;if(!((t=e).metaKey||t.altKey||t.ctrlKey||t.shiftKey)&&this.history&&this.url&&this.root)return e.preventDefault(),this.history.push((n=this.root,"/"==(a=this.url).charAt(0)&&"/"==n.charAt(n.length-1)?n.slice(0,n.length-1)+a:n+a))}render(){let e={class:{[this.activeClass]:null!==this.match},onClick:this.handleClick.bind(this)};return this.anchorClass&&(e.class[this.anchorClass]=!0),"a"===this.custom&&(e=Object.assign({},e,{href:this.url,title:this.anchorTitle,role:this.anchorRole,tabindex:this.anchorTabIndex,"aria-haspopup":this.ariaHaspopup,id:this.anchorId,"aria-posinset":this.ariaPosinset,"aria-setsize":this.ariaSetsize,"aria-label":this.ariaLabel})),t(this.custom,Object.assign({},e),t("slot",null))}get el(){return a(this)}static get watchers(){return{location:["computeMatch"]}}};i.injectProps(U,["history","location","root"]);const K=e=>"STENCIL-ROUTE"===e.tagName,W=class{constructor(t){e(this,t),this.group=((1e17*Math.random()).toString().match(/.{4}/g)||[]).join("-"),this.subscribers=[],this.queue=n(this,"queue")}componentWillLoad(){null!=this.location&&this.regenerateSubscribers(this.location)}async regenerateSubscribers(e){if(null==e)return;let t=-1;if(this.subscribers=Array.prototype.slice.call(this.el.children).filter(K).map((a,n)=>{const s=k(e.pathname,{path:a.url,exact:a.exact,strict:!0});return s&&-1===t&&(t=n),{el:a,match:s}}),-1===t)return;if(this.activeIndex===t)return void(this.subscribers[t].el.match=this.subscribers[t].match);this.activeIndex=t;const a=this.subscribers[this.activeIndex];this.scrollTopOffset&&(a.el.scrollTopOffset=this.scrollTopOffset),a.el.group=this.group,a.el.match=a.match,a.el.componentUpdated=e=>{this.queue.write(()=>{this.subscribers.forEach((e,t)=>{if(e.el.componentUpdated=void 0,t===this.activeIndex)return e.el.style.display="";this.scrollTopOffset&&(e.el.scrollTopOffset=this.scrollTopOffset),e.el.group=this.group,e.el.match=null,e.el.style.display="none"})}),this.routeViewsUpdated&&this.routeViewsUpdated(Object.assign({scrollTopOffset:this.scrollTopOffset},e))}}render(){return t("slot",null)}get el(){return a(this)}static get watchers(){return{location:["regenerateSubscribers"]}}};i.injectProps(W,["location","routeViewsUpdated"]);const M=(e,...t)=>{e||console.warn(...t)},O=()=>{let e,t=[];return{setPrompt:t=>(M(null==e,"A history supports only one prompt at a time"),e=t,()=>{e===t&&(e=null)}),confirmTransitionTo:(t,a,n,s)=>{if(null!=e){const r="function"==typeof e?e(t,a):e;"string"==typeof r?"function"==typeof n?n(r,s):(M(!1,"A history needs a getUserConfirmation function in order to use a prompt message"),s(!0)):s(!1!==r)}else s(!0)},appendListener:e=>{let a=!0;const n=(...t)=>{a&&e(...t)};return t.push(n),()=>{a=!1,t=t.filter(e=>e!==n)}},notifyListeners:(...e)=>{t.forEach(t=>t(...e))}}},j=(e,t="scrollPositions")=>{let a=new Map;const n=(t,n)=>{if(a.set(t,n),Q(e,"sessionStorage")){const t=[];a.forEach((e,a)=>{t.push([a,e])}),e.sessionStorage.setItem("scrollPositions",JSON.stringify(t))}};if(Q(e,"sessionStorage")){const n=e.sessionStorage.getItem(t);a=n?new Map(JSON.parse(n)):a}return"scrollRestoration"in e.history&&(history.scrollRestoration="manual"),{set:n,get:e=>a.get(e),has:e=>a.has(e),capture:t=>{n(t,[e.scrollX,e.scrollY])}}},x={hashbang:{encodePath:e=>"!"===e.charAt(0)?e:"!/"+P(e),decodePath:e=>"!"===e.charAt(0)?e.substr(1):e},noslash:{encodePath:P,decodePath:v},slash:{encodePath:v,decodePath:v}},L=(e,t)=>{const a=0==e.pathname.indexOf(t)?"/"+e.pathname.slice(t.length):e.pathname;return Object.assign({},e,{pathname:a})},F={browser:(e,t={})=>{let a=!1;const n=e.history,s=e.location,r=e.navigator,i=(e=>{const t=e.navigator.userAgent;return(-1===t.indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&e.history&&"pushState"in e.history})(e),o=!(-1===r.userAgent.indexOf("Trident")),p=j(e),l=null!=t.forceRefresh&&t.forceRefresh,d=null!=t.getUserConfirmation?t.getUserConfirmation:D,y=null!=t.keyLength?t.keyLength:6,c=t.basename?I(v(t.basename)):"",u=()=>{try{return e.history.state||{}}catch(e){return{}}},g=e=>{e=e||{};const{key:t,state:a}=e,{pathname:n,search:r,hash:i}=s;let o=n+r+i;return M(!c||S(o,c),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+o+'" to begin with "'+c+'".'),c&&(o=f(o,c)),C(o,a,t||B(y))},m=O(),h=e=>{p.capture(W.location.key),Object.assign(W,e),W.location.scrollPosition=p.get(W.location.key),W.length=n.length,m.notifyListeners(W.location,W.action)},P=e=>{((e,t)=>void 0===t.state&&-1===e.userAgent.indexOf("CriOS"))(r,e)||_(g(e.state))},R=()=>{_(g(u()))},_=e=>{if(a)a=!1,h();else{const t="POP";m.confirmTransitionTo(e,t,d,a=>{a?h({action:t,location:e}):A(e)})}},A=e=>{let t=T.indexOf(W.location.key),n=T.indexOf(e.key);-1===t&&(t=0),-1===n&&(n=0);const s=t-n;s&&(a=!0,U(s))},w=g(u());let T=[w.key],k=0,G=!1;const Q=e=>c+b(e),U=e=>{n.go(e)},K=t=>{k+=t,1===k?(e.addEventListener("popstate",P),o&&e.addEventListener("hashchange",R)):0===k&&(e.removeEventListener("popstate",P),o&&e.removeEventListener("hashchange",R))},W={length:n.length,action:"POP",location:w,createHref:Q,push:(e,t)=>{M(!("object"==typeof e&&void 0!==e.state&&void 0!==t),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");const a="PUSH",r=C(e,t,B(y),W.location);m.confirmTransitionTo(r,a,d,e=>{if(!e)return;const t=Q(r),{key:o,state:p}=r;if(i)if(n.pushState({key:o,state:p},"",t),l)s.href=t;else{const e=T.indexOf(W.location.key),t=T.slice(0,-1===e?0:e+1);t.push(r.key),T=t,h({action:a,location:r})}else M(void 0===p,"Browser history cannot push state in browsers that do not support HTML5 history"),s.href=t})},replace:(e,t)=>{M(!("object"==typeof e&&void 0!==e.state&&void 0!==t),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");const a="REPLACE",r=C(e,t,B(y),W.location);m.confirmTransitionTo(r,a,d,e=>{if(!e)return;const t=Q(r),{key:o,state:p}=r;if(i)if(n.replaceState({key:o,state:p},"",t),l)s.replace(t);else{const e=T.indexOf(W.location.key);-1!==e&&(T[e]=r.key),h({action:a,location:r})}else M(void 0===p,"Browser history cannot replace state in browsers that do not support HTML5 history"),s.replace(t)})},go:U,goBack:()=>U(-1),goForward:()=>U(1),block:(e="")=>{const t=m.setPrompt(e);return G||(K(1),G=!0),()=>(G&&(G=!1,K(-1)),t())},listen:e=>{const t=m.appendListener(e);return K(1),()=>{K(-1),t()}},win:e};return W},hash:(e,t={})=>{let a=!1,n=null,s=0,r=!1;const i=e.location,o=e.history,p=-1===e.navigator.userAgent.indexOf("Firefox"),l=null!=t.keyLength?t.keyLength:6,{getUserConfirmation:d=D,hashType:y="slash"}=t,c=t.basename?I(v(t.basename)):"",{encodePath:u,decodePath:g}=x[y],m=()=>{const e=i.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)},h=e=>{const t=i.href.indexOf("#");i.replace(i.href.slice(0,t>=0?t:0)+"#"+e)},P=()=>{let e=g(m());return M(!c||S(e,c),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+e+'" to begin with "'+c+'".'),c&&(e=f(e,c)),C(e,void 0,B(l))},R=O(),_=e=>{Object.assign(L,e),L.length=o.length,R.notifyListeners(L.location,L.action)},w=()=>{const e=m(),t=u(e);if(e!==t)h(t);else{const e=P(),t=L.location;if(!a&&(s=t).pathname===(r=e).pathname&&s.search===r.search&&s.hash===r.hash&&s.key===r.key&&A(s.state,r.state))return;if(n===b(e))return;n=null,T(e)}var s,r},T=e=>{if(a)a=!1,_();else{const t="POP";R.confirmTransitionTo(e,t,d,a=>{a?_({action:t,location:e}):k(e)})}},k=e=>{let t=K.lastIndexOf(b(L.location)),n=K.lastIndexOf(b(e));-1===t&&(t=0),-1===n&&(n=0);const s=t-n;s&&(a=!0,W(s))},G=m(),Q=u(G);G!==Q&&h(Q);const U=P();let K=[b(U)];const W=e=>{M(p,"Hash history go(n) causes a full page reload in this browser"),o.go(e)},j=(e,t)=>{s+=t,1===s?e.addEventListener("hashchange",w):0===s&&e.removeEventListener("hashchange",w)},L={length:o.length,action:"POP",location:U,createHref:e=>"#"+u(c+b(e)),push:(e,t)=>{M(void 0===t,"Hash history cannot push state; it is ignored");const a="PUSH",s=C(e,void 0,B(l),L.location);R.confirmTransitionTo(s,a,d,e=>{if(!e)return;const t=b(s),r=u(c+t);if(m()!==r){n=t,(e=>{i.hash=e})(r);const e=K.lastIndexOf(b(L.location)),o=K.slice(0,-1===e?0:e+1);o.push(t),K=o,_({action:a,location:s})}else M(!1,"Hash history cannot PUSH the same path; a new entry will not be added to the history stack"),_()})},replace:(e,t)=>{M(void 0===t,"Hash history cannot replace state; it is ignored");const a="REPLACE",s=C(e,void 0,B(l),L.location);R.confirmTransitionTo(s,a,d,e=>{if(!e)return;const t=b(s),r=u(c+t);m()!==r&&(n=t,h(r));const i=K.indexOf(b(L.location));-1!==i&&(K[i]=t),_({action:a,location:s})})},go:W,goBack:()=>W(-1),goForward:()=>W(1),block:(t="")=>{const a=R.setPrompt(t);return r||(j(e,1),r=!0),()=>(r&&(r=!1,j(e,-1)),a())},listen:t=>{const a=R.appendListener(t);return j(e,1),()=>{j(e,-1),a()}},win:e};return L}},E=class{constructor(t){e(this,t),this.root="/",this.historyType="browser",this.titleSuffix="",this.routeViewsUpdated=(e={})=>{if(this.history&&e.scrollToId&&"browser"===this.historyType){const t=this.history.win.document.getElementById(e.scrollToId);if(t)return t.scrollIntoView()}this.scrollTo(e.scrollTopOffset||this.scrollTopOffset)},this.isServer=n(this,"isServer"),this.queue=n(this,"queue")}componentWillLoad(){this.history=F[this.historyType](this.el.ownerDocument.defaultView),this.history.listen(e=>{e=L(e,this.root),this.location=e}),this.location=L(this.history.location,this.root)}scrollTo(e){const t=this.history;if(null!=e&&!this.isServer&&t)return"POP"===t.action&&Array.isArray(t.location.scrollPosition)?this.queue.write(()=>{t&&t.location&&Array.isArray(t.location.scrollPosition)&&t.win.scrollTo(t.location.scrollPosition[0],t.location.scrollPosition[1])}):this.queue.write(()=>{t.win.scrollTo(0,e)})}render(){if(this.location&&this.history)return t(i.Provider,{state:{historyType:this.historyType,location:this.location,titleSuffix:this.titleSuffix,root:this.root,history:this.history,routeViewsUpdated:this.routeViewsUpdated}},t("slot",null))}get el(){return a(this)}},z={Query:{name:"Query",fields:{games:{type:"PaginatedGame",args:{options:["GameQuery!","GameQuery"]}},game:{type:"Game",args:{gameId:["String!","String"]}},rounds:{type:"PaginatedRound",args:{options:["RoundQuery!","RoundQuery"]}},round:{type:"Round",args:{roundId:["Float!","Float"]}},gameModes:{type:"PaginatedGameMode"},playerRoundStats:{type:"PaginatedPlayerRoundStats",args:{options:["PlayerRoundStatsQuery!","PlayerRoundStatsQuery"]}},playerRoundWeaponStats:{type:"PaginatedPlayerRoundWeaponStats",args:{options:["PlayerRoundWeaponStatsQuery!","PlayerRoundWeaponStatsQuery"]}},playerStatistics:{type:"PaginatedPlayerStatistics",args:{options:["PlayerStatisticsQuery!","PlayerStatisticsQuery"]}},playerWeaponStatistics:{type:"PlayerWeaponStatistics",args:{options:["PlayerWeaponStatisticsQuery!","PlayerWeaponStatisticsQuery"]}},gameservers:{type:"PaginatedGameserver",args:{options:["GameserversQuery!","GameserversQuery"]}},gameserver:{type:"Gameserver",args:{options:["GameserverQuery!","GameserverQuery"]}},registeredPlayers:{type:"PaginatedRegisteredPlayers",args:{options:["RegisteredPlayersQuery!","RegisteredPlayersQuery"]}},registeredPlayer:{type:"RegisteredPlayer",args:{options:["RegisteredPlayerQuery!","RegisteredPlayerQuery"]}},bans:{type:"PaginatedBan",args:{options:["BanQuery!","BanQuery"]}},banCheck:{type:"Ban",args:{banCheck:["BanCheck!","BanCheck"]}},authKeys:{type:"PaginatedAuthKey",args:{options:["AuthKeyQuery!","AuthKeyQuery"]}},authKey:{type:"AuthKey",args:{authKey:["String!","String"]}},authValid:{type:"Boolean"},appConfig:{type:"AppConfig",args:{cached:["Boolean","Boolean"]}},__typename:{type:"String"}},scalar:["authValid"]},GameQuery:{name:"GameQuery",fields:{page:{type:"Int"},pageSize:{type:"Int"},orderDesc:{type:"Boolean"},gameserverId:{type:"String"},startedAfter:{type:"DateTime"},startedBefore:{type:"DateTime"},map:{type:"ServerMapInput"},gameMode:{type:"GameModeInput"},onlyFinishedGames:{type:"Boolean"},__typename:{type:"String"}},scalar:["page","pageSize","orderDesc","gameserverId","startedAfter","startedBefore","onlyFinishedGames"]},Int:{name:"Int"},Boolean:{name:"Boolean"},String:{name:"String"},DateTime:{name:"DateTime"},ServerMapInput:{name:"ServerMapInput",fields:{name:{type:"String"},__typename:{type:"String"}},scalar:["name"]},GameModeInput:{name:"GameModeInput",fields:{name:{type:"String"},isTeamBased:{type:"Boolean"},__typename:{type:"String"}},scalar:["name","isTeamBased"]},PaginatedGame:{name:"PaginatedGame",fields:{content:{type:"Game"},totalCount:{type:"Int"},pageCount:{type:"Int"},__typename:{type:"String"}},scalar:["totalCount","pageCount"]},Game:{name:"Game",fields:{id:{type:"String"},gameserver:{type:"Gameserver"},startedAt:{type:"DateTime"},endedAt:{type:"DateTime"},map:{type:"ServerMap"},gameMode:{type:"GameMode"},rounds:{type:"Round"},__typename:{type:"String"}},scalar:["id","startedAt","endedAt"]},Gameserver:{name:"Gameserver",fields:{id:{type:"String"},authKey:{type:"String"},currentName:{type:"String"},description:{type:"String"},lastContact:{type:"DateTime"},__typename:{type:"String"}},scalar:["id","authKey","currentName","description","lastContact"]},ServerMap:{name:"ServerMap",fields:{name:{type:"String"},__typename:{type:"String"}},scalar:["name"]},GameMode:{name:"GameMode",fields:{name:{type:"String"},isTeamBased:{type:"Boolean"},__typename:{type:"String"}},scalar:["name","isTeamBased"]},Round:{name:"Round",fields:{id:{type:"Int"},game:{type:"Game"},startedAt:{type:"DateTime"},endedAt:{type:"DateTime"},scoreSpecialForces:{type:"Int"},scoreTerrorists:{type:"Int"},__typename:{type:"String"}},scalar:["id","startedAt","endedAt","scoreSpecialForces","scoreTerrorists"]},RoundQuery:{name:"RoundQuery",fields:{page:{type:"Int"},pageSize:{type:"Int"},orderDesc:{type:"Boolean"},gameId:{type:"String"},startedAfter:{type:"DateTime"},startedBefore:{type:"DateTime"},onlyFinishedRounds:{type:"Boolean"},__typename:{type:"String"}},scalar:["page","pageSize","orderDesc","gameId","startedAfter","startedBefore","onlyFinishedRounds"]},PaginatedRound:{name:"PaginatedRound",fields:{content:{type:"Round"},totalCount:{type:"Int"},pageCount:{type:"Int"},__typename:{type:"String"}},scalar:["totalCount","pageCount"]},Float:{name:"Float"},PaginatedGameMode:{name:"PaginatedGameMode",fields:{content:{type:"GameMode"},totalCount:{type:"Int"},pageCount:{type:"Int"},__typename:{type:"String"}},scalar:["totalCount","pageCount"]},PlayerRoundStatsQuery:{name:"PlayerRoundStatsQuery",fields:{page:{type:"Int"},pageSize:{type:"Int"},roundId:{type:"Int"},__typename:{type:"String"}},scalar:["page","pageSize","roundId"]},PaginatedPlayerRoundStats:{name:"PaginatedPlayerRoundStats",fields:{content:{type:"PlayerRoundStats"},totalCount:{type:"Int"},pageCount:{type:"Int"},__typename:{type:"String"}},scalar:["totalCount","pageCount"]},PlayerRoundStats:{name:"PlayerRoundStats",fields:{round:{type:"Round"},steamId64:{type:"Int"},kills:{type:"Int"},deaths:{type:"Int"},suicides:{type:"Int"},totalDamage:{type:"Float"},score:{type:"Int"},team:{type:"Team"},steamUser:{type:"SteamUser"},__typename:{type:"String"}},scalar:["steamId64","kills","deaths","suicides","totalDamage","score","team"]},Team:{name:"Team"},SteamUser:{name:"SteamUser",fields:{steamId64:{type:"String"},name:{type:"String"},avatarBigUrl:{type:"String"},avatarMediumUrl:{type:"String"},__typename:{type:"String"}},scalar:["steamId64","name","avatarBigUrl","avatarMediumUrl"]},PlayerRoundWeaponStatsQuery:{name:"PlayerRoundWeaponStatsQuery",fields:{page:{type:"Int"},pageSize:{type:"Int"},roundId:{type:"Int"},__typename:{type:"String"}},scalar:["page","pageSize","roundId"]},PaginatedPlayerRoundWeaponStats:{name:"PaginatedPlayerRoundWeaponStats",fields:{content:{type:"PlayerRoundWeaponStats"},totalCount:{type:"Int"},pageCount:{type:"Int"},__typename:{type:"String"}},scalar:["totalCount","pageCount"]},PlayerRoundWeaponStats:{name:"PlayerRoundWeaponStats",fields:{steamId64:{type:"String"},round:{type:"Round"},weapon:{type:"Weapon"},totalDamage:{type:"Float"},shotsHead:{type:"Int"},shotsChest:{type:"Int"},shotsLegs:{type:"Int"},shotsArms:{type:"Int"},shotsFired:{type:"Int"},steamUser:{type:"SteamUser"},__typename:{type:"String"}},scalar:["steamId64","totalDamage","shotsHead","shotsChest","shotsLegs","shotsArms","shotsFired"]},Weapon:{name:"Weapon",fields:{name:{type:"String"},weaponType:{type:"WeaponType"},__typename:{type:"String"}},scalar:["name","weaponType"]},WeaponType:{name:"WeaponType"},PlayerStatisticsQuery:{name:"PlayerStatisticsQuery",fields:{steamId64:{type:"String"},page:{type:"Int"},pageSize:{type:"Int"},orderDesc:{type:"Boolean"},orderBy:{type:"OrderPlayerBaseStats"},gameModeName:{type:"String"},roundId:{type:"Int"},gameId:{type:"String"},startedAfter:{type:"DateTime"},startedBefore:{type:"DateTime"},endedAfter:{type:"DateTime"},endedBefore:{type:"DateTime"},onlyFinishedRounds:{type:"Boolean"},__typename:{type:"String"}},scalar:["steamId64","page","pageSize","orderDesc","orderBy","gameModeName","roundId","gameId","startedAfter","startedBefore","endedAfter","endedBefore","onlyFinishedRounds"]},OrderPlayerBaseStats:{name:"OrderPlayerBaseStats"},PaginatedPlayerStatistics:{name:"PaginatedPlayerStatistics",fields:{content:{type:"PlayerStatistics"},totalCount:{type:"Int"},pageCount:{type:"Int"},__typename:{type:"String"}},scalar:["totalCount","pageCount"]},PlayerStatistics:{name:"PlayerStatistics",fields:{steamId64:{type:"String"},rank:{type:"Int"},kills:{type:"Int"},deaths:{type:"Int"},suicides:{type:"Int"},killDeathRatio:{type:"Float"},totalScore:{type:"Int"},totalDamage:{type:"Float"},numberGamesPlayed:{type:"Int"},numberRoundsPlayed:{type:"Int"},avgDamagePerRound:{type:"Float"},avgScorePerRound:{type:"Float"},steamUser:{type:"SteamUser"},__typename:{type:"String"}},scalar:["steamId64","rank","kills","deaths","suicides","killDeathRatio","totalScore","totalDamage","numberGamesPlayed","numberRoundsPlayed","avgDamagePerRound","avgScorePerRound"]},PlayerWeaponStatisticsQuery:{name:"PlayerWeaponStatisticsQuery",fields:{steamId64:{type:"String"},gameModeName:{type:"String"},roundId:{type:"Int"},gameId:{type:"String"},startedAfter:{type:"DateTime"},startedBefore:{type:"DateTime"},endedAfter:{type:"DateTime"},endedBefore:{type:"DateTime"},onlyFinishedRounds:{type:"Boolean"},__typename:{type:"String"}},scalar:["steamId64","gameModeName","roundId","gameId","startedAfter","startedBefore","endedAfter","endedBefore","onlyFinishedRounds"]},PlayerWeaponStatistics:{name:"PlayerWeaponStatistics",fields:{steamId64:{type:"String"},totalDamage:{type:"Float"},totalShots:{type:"Int"},shotsChest:{type:"Int"},shotsLegs:{type:"Int"},shotsArms:{type:"Int"},shotsHead:{type:"Int"},weapon:{type:"Weapon"},steamUser:{type:"SteamUser"},__typename:{type:"String"}},scalar:["steamId64","totalDamage","totalShots","shotsChest","shotsLegs","shotsArms","shotsHead"]},GameserversQuery:{name:"GameserversQuery",fields:{page:{type:"Int"},pageSize:{type:"Int"},orderDesc:{type:"Boolean"},orderByCurrentName:{type:"Boolean"},search:{type:"String"},__typename:{type:"String"}},scalar:["page","pageSize","orderDesc","orderByCurrentName","search"]},PaginatedGameserver:{name:"PaginatedGameserver",fields:{content:{type:"Gameserver"},totalCount:{type:"Int"},pageCount:{type:"Int"},__typename:{type:"String"}},scalar:["totalCount","pageCount"]},GameserverQuery:{name:"GameserverQuery",fields:{id:{type:"String"},authKey:{type:"String"},__typename:{type:"String"}},scalar:["id","authKey"]},RegisteredPlayersQuery:{name:"RegisteredPlayersQuery",fields:{page:{type:"Int"},pageSize:{type:"Int"},search:{type:"String"},__typename:{type:"String"}},scalar:["page","pageSize","search"]},PaginatedRegisteredPlayers:{name:"PaginatedRegisteredPlayers",fields:{content:{type:"RegisteredPlayer"},totalCount:{type:"Int"},pageCount:{type:"Int"},__typename:{type:"String"}},scalar:["totalCount","pageCount"]},RegisteredPlayer:{name:"RegisteredPlayer",fields:{steamId64:{type:"String"},visibleRole:{type:"String"},rootAdmin:{type:"Boolean"},kick:{type:"Boolean"},ban:{type:"Boolean"},tempKickBan:{type:"Boolean"},mute:{type:"Boolean"},makeTeams:{type:"Boolean"},reservedSlots:{type:"Boolean"},broadcastMessage:{type:"Boolean"},gameControl:{type:"Boolean"},steamUser:{type:"SteamUser"},__typename:{type:"String"}},scalar:["steamId64","visibleRole","rootAdmin","kick","ban","tempKickBan","mute","makeTeams","reservedSlots","broadcastMessage","gameControl"]},RegisteredPlayerQuery:{name:"RegisteredPlayerQuery",fields:{id:{type:"Int"},steamId64:{type:"String"},__typename:{type:"String"}},scalar:["id","steamId64"]},BanQuery:{name:"BanQuery",fields:{page:{type:"Int"},pageSize:{type:"Int"},search:{type:"String"},steamId64:{type:"String"},bannedBySteamId64:{type:"String"},id1:{type:"String"},id2:{type:"String"},orderDesc:{type:"Boolean"},orderByExpirationDate:{type:"Boolean"},noExpiredBans:{type:"Boolean"},__typename:{type:"String"}},scalar:["page","pageSize","search","steamId64","bannedBySteamId64","id1","id2","orderDesc","orderByExpirationDate","noExpiredBans"]},PaginatedBan:{name:"PaginatedBan",fields:{content:{type:"Ban"},totalCount:{type:"Int"},pageCount:{type:"Int"},__typename:{type:"String"}},scalar:["totalCount","pageCount"]},Ban:{name:"Ban",fields:{id:{type:"String"},steamId64:{type:"String"},bannedById64:{type:"String"},createdAt:{type:"DateTime"},expiredAt:{type:"DateTime"},reason:{type:"String"},gameserver:{type:"Gameserver"},id1:{type:"String"},id2:{type:"String"},bannedSteamUser:{type:"SteamUser"},bannedBySteamUser:{type:"SteamUser"},__typename:{type:"String"}},scalar:["id","steamId64","bannedById64","createdAt","expiredAt","reason","id1","id2"]},BanCheck:{name:"BanCheck",fields:{steamId64:{type:"String"},id1:{type:"String"},id2:{type:"String"},banId:{type:"String"},checkBanlistPartners:{type:"Boolean"},__typename:{type:"String"}},scalar:["steamId64","id1","id2","banId","checkBanlistPartners"]},AuthKeyQuery:{name:"AuthKeyQuery",fields:{page:{type:"Int"},pageSize:{type:"Int"},search:{type:"String"},orderDesc:{type:"Boolean"},__typename:{type:"String"}},scalar:["page","pageSize","search","orderDesc"]},PaginatedAuthKey:{name:"PaginatedAuthKey",fields:{content:{type:"AuthKey"},totalCount:{type:"Int"},pageCount:{type:"Int"},__typename:{type:"String"}},scalar:["totalCount","pageCount"]},AuthKey:{name:"AuthKey",fields:{id:{type:"Int"},authKey:{type:"String"},description:{type:"String"},lastUse:{type:"DateTime"},__typename:{type:"String"}},scalar:["id","authKey","description","lastUse"]},AppConfig:{name:"AppConfig",fields:{instanceId:{type:"String"},publicStats:{type:"Boolean"},banlistPartners:{type:"String"},publicBanQuery:{type:"Boolean"},masterserverKey:{type:"String"},steamWebApiKey:{type:"String"},ownAddress:{type:"String"},appInfo:{type:"AppInfo"},__typename:{type:"String"}},scalar:["instanceId","publicStats","banlistPartners","publicBanQuery","masterserverKey","steamWebApiKey","ownAddress"]},AppInfo:{name:"AppInfo",fields:{gamesPlayed:{type:"Int"},roundsPlayed:{type:"Int"},activeBans:{type:"Int"},uniquePlayers:{type:"Int"},__typename:{type:"String"}},scalar:["gamesPlayed","roundsPlayed","activeBans","uniquePlayers"]},Mutation:{name:"Mutation",fields:{deleteGames:{type:"Boolean",args:{gameInputs:["[GameInput!]!","GameInput"]}},createUpdateGame:{type:"Game",args:{gameInput:["GameInput!","GameInput"]}},deleteRounds:{type:"Boolean",args:{roundInputs:["[RoundInput!]!","RoundInput"]}},createUpdateRound:{type:"Round",args:{roundInput:["RoundInput!","RoundInput"]}},createUpdatePlayerRoundStats:{type:"Boolean",args:{playerRoundStatsInput:["[PlayerRoundStatsInput!]!","PlayerRoundStatsInput"]}},createUpdatePlayerRoundWeaponStats:{type:"Boolean",args:{playerRoundWeaponStatsInput:["[PlayerRoundWeaponStatsInput!]!","PlayerRoundWeaponStatsInput"]}},deleteGameserver:{type:"Boolean",args:{gameserverId:["String!","String"]}},createUpdateGameserver:{type:"Gameserver",args:{gameserver:["GameserverInput!","GameserverInput"]}},updateGameserver:{type:"Gameserver",args:{gameserverUpdate:["GameserverUpdateInput!","GameserverUpdateInput"]}},deleteRegisteredPlayer:{type:"Boolean",args:{steamId64:["String!","String"]}},createUpdateRegisteredPlayer:{type:"RegisteredPlayer",args:{registeredPlayer:["RegisteredPlayerInput!","RegisteredPlayerInput"]}},deleteBan:{type:"Boolean",args:{banId:["String!","String"]}},createUpdateBan:{type:"Ban",args:{banInput:["BanInput!","BanInput"]}},authPlayerToken:{type:"String",args:{steamId64:["String!","String"]}},deleteAuthKey:{type:"Boolean",args:{authKey:["String!","String"]}},createUpdateAuthKey:{type:"AuthKey",args:{authKey:["AuthKeyInput!","AuthKeyInput"]}},login:{type:"LoginResponse",args:{password:["String!","String"]}},loginDev:{type:"LoginResponse",args:{password:["String!","String"]}},updateAppConfig:{type:"AppConfig",args:{appConfig:["AppConfigInput!","AppConfigInput"]}},__typename:{type:"String"}},scalar:["deleteGames","deleteRounds","createUpdatePlayerRoundStats","createUpdatePlayerRoundWeaponStats","deleteGameserver","deleteRegisteredPlayer","deleteBan","authPlayerToken","deleteAuthKey"]},GameInput:{name:"GameInput",fields:{id:{type:"String"},gameserverId:{type:"String"},startedAt:{type:"DateTime"},endedAt:{type:"DateTime"},map:{type:"ServerMapInput"},gameMode:{type:"GameModeInput"},__typename:{type:"String"}},scalar:["id","gameserverId","startedAt","endedAt"]},RoundInput:{name:"RoundInput",fields:{id:{type:"Int"},gameId:{type:"String"},startedAt:{type:"DateTime"},endedAt:{type:"DateTime"},scoreSpecialForces:{type:"Int"},scoreTerrorists:{type:"Int"},__typename:{type:"String"}},scalar:["id","gameId","startedAt","endedAt","scoreSpecialForces","scoreTerrorists"]},PlayerRoundStatsInput:{name:"PlayerRoundStatsInput",fields:{roundId:{type:"Int"},steamId64:{type:"String"},kills:{type:"Int"},deaths:{type:"Int"},suicides:{type:"Int"},totalDamage:{type:"Float"},score:{type:"Int"},team:{type:"Team"},__typename:{type:"String"}},scalar:["roundId","steamId64","kills","deaths","suicides","totalDamage","score","team"]},PlayerRoundWeaponStatsInput:{name:"PlayerRoundWeaponStatsInput",fields:{roundId:{type:"Int"},steamId64:{type:"String"},weapon:{type:"WeaponInput"},totalDamage:{type:"Float"},shotsHead:{type:"Int"},shotsChest:{type:"Int"},shotsLegs:{type:"Int"},shotsArms:{type:"Int"},shotsFired:{type:"Int"},__typename:{type:"String"}},scalar:["roundId","steamId64","totalDamage","shotsHead","shotsChest","shotsLegs","shotsArms","shotsFired"]},WeaponInput:{name:"WeaponInput",fields:{name:{type:"String"},weaponType:{type:"WeaponType"},__typename:{type:"String"}},scalar:["name","weaponType"]},GameserverInput:{name:"GameserverInput",fields:{id:{type:"String"},authKey:{type:"String"},currentName:{type:"String"},description:{type:"String"},__typename:{type:"String"}},scalar:["id","authKey","currentName","description"]},GameserverUpdateInput:{name:"GameserverUpdateInput",fields:{currentName:{type:"String"},__typename:{type:"String"}},scalar:["currentName"]},RegisteredPlayerInput:{name:"RegisteredPlayerInput",fields:{steamId64:{type:"String"},rootAdmin:{type:"Boolean"},visibleRole:{type:"String"},kick:{type:"Boolean"},ban:{type:"Boolean"},tempKickBan:{type:"Boolean"},mute:{type:"Boolean"},makeTeams:{type:"Boolean"},reservedSlots:{type:"Boolean"},broadcastMessage:{type:"Boolean"},gameControl:{type:"Boolean"},__typename:{type:"String"}},scalar:["steamId64","rootAdmin","visibleRole","kick","ban","tempKickBan","mute","makeTeams","reservedSlots","broadcastMessage","gameControl"]},BanInput:{name:"BanInput",fields:{banId:{type:"String"},steamId64:{type:"String"},id1:{type:"String"},id2:{type:"String"},bannedById64:{type:"String"},expiredAt:{type:"DateTime"},reason:{type:"String"},gameserverId:{type:"String"},__typename:{type:"String"}},scalar:["banId","steamId64","id1","id2","bannedById64","expiredAt","reason","gameserverId"]},AuthKeyInput:{name:"AuthKeyInput",fields:{id:{type:"Int"},authKey:{type:"String"},description:{type:"String"},__typename:{type:"String"}},scalar:["id","authKey","description"]},LoginResponse:{name:"LoginResponse",fields:{appConfig:{type:"AppConfig"},jwt:{type:"String"},__typename:{type:"String"}},scalar:["jwt"]},AppConfigInput:{name:"AppConfigInput",fields:{publicStats:{type:"Boolean"},banlistPartners:{type:"String"},publicBanQuery:{type:"Boolean"},masterserverKey:{type:"String"},steamWebApiKey:{type:"String"},ownAddress:{type:"String"},password:{type:"String"},__typename:{type:"String"}},scalar:["publicStats","banlistPartners","publicBanQuery","masterserverKey","steamWebApiKey","ownAddress","password"]}};function H(e=""){const t=o.linkTypeMap(z);let a="";return{client:o.createClient({fetcher:({query:t,variables:n},s)=>s(window.location.origin+"/graphql",{method:"POST",body:JSON.stringify({query:t,variables:n}),headers:""===e?{"Content-Type":"application/json",Accept:"application/json","x-request-id":a}:{Authorization:"Bearer "+e,"Content-Type":"application/json",Accept:"application/json","x-request-id":a}}).then(e=>e.json()),queryRoot:t.Query,mutationRoot:t.Mutation}),setTransactionId:e=>a=e}}var N=function(e,t,a,n){var s,r=arguments.length,i=r<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,a,n);else for(var o=e.length-1;o>=0;o--)(s=e[o])&&(i=(r<3?s(i):r>3?s(t,a,i):s(t,a))||i);return r>3&&i&&Object.defineProperty(t,a,i),i};const q=class{constructor(t){e(this,t),this.login=s(this,"login",7),this.logout=s(this,"logout",7),this.navbarActive=!1,this.navbarItems=[{title:"Home",url:"/"},{title:"Player Statistics",url:"/player-statistics",condition:()=>{var e;return!!this.isAdmin||!!(null===(e=this.appConfig)||void 0===e?void 0:e.publicStats)}},{title:"Settings",children:[{title:"TO4ST",url:"/to4st-settings"},{title:"Gameservers",url:"/gameserver-settings"},{title:"Registered Players",url:"/registered-players"}],condition:()=>!!this.isAdmin}],this.isAdmin=!1}goHome(){this.history.replace("/",{})}render(){return t(r,null,t("nav",{class:"navbar is-fixed-top",role:"navigation","aria-label":"main navigation"},t("div",{class:"navbar-brand"},t("a",{class:"navbar-item",href:"https://to4.co"},t("img",{src:"./assets/to4stCoreLogo.png",width:"198",height:"19"})),t("a",{role:"button",class:{"navbar-burger":!0,burger:!0,"is-active":this.navbarActive},"aria-label":"menu","aria-expanded":"false",onClick:()=>this.navbarActive=!this.navbarActive},t("span",{"aria-hidden":"true"}),t("span",{"aria-hidden":"true"}),t("span",{"aria-hidden":"true"}))),t("div",{class:{"navbar-menu":!0,"is-active":this.navbarActive}},t("div",{class:"navbar-start"},this.navbarItems.filter(e=>{var t,a;return null===(a=null===(t=e.condition)||void 0===t?void 0:t.call(e))||void 0===a||a}).map(e=>e.children?this.renderNavDropdown(e):this.renderNavItem(e))),t("div",{class:"navbar-end"},t("div",{class:"navbar-item"},t("a",{class:{"button is-light":!0},onClick:()=>this.isAdmin?this.logout.emit():this.login.emit()},this.isAdmin?"Logout":"Login"))))))}renderNavDropdown(e){return t("a",{class:"navbar-item has-dropdown is-hoverable"},t("a",{class:"navbar-link"},e.title),t("div",{class:"navbar-dropdown"},e.children.filter(e=>{var t,a;return null===(a=null===(t=e.condition)||void 0===t?void 0:t.call(e))||void 0===a||a}).map(e=>this.renderNavItem(e))))}renderNavItem(e){return t("stencil-route-link",{class:"navbar-item",anchorClass:"navbar-link is-arrowless",url:e.url,exact:!0},e.title)}};N([p.Context("appConfig")],q.prototype,"appConfig",void 0),N([p.Context("isAdmin")],q.prototype,"isAdmin",void 0),i.injectProps(q,["history","location"]),q.style=":host{position:absolut;z-index:100 !important}";const $=class{constructor(t){e(this,t),this.close=s(this,"close",7),this.successfulLogin=s(this,"successfulLogin",7),this.currentError="",this.apiClient={}}async login(){var e;if((null===(e=this.currentPw)||void 0===e?void 0:e.length)>0){try{const e=await this.apiClient.client.chain.mutation.login({password:l(this.currentPw)}).execute({jwt:!0,appConfig:{instanceId:!0,publicStats:!0,publicBanQuery:!0,banlistPartners:!0,masterserverKey:!0,steamWebApiKey:!0,ownAddress:!0,appInfo:{uniquePlayers:!0,gamesPlayed:!0,roundsPlayed:!0,activeBans:!0}}});this.successfulLogin.emit({appconfig:e.appConfig,token:e.jwt})}catch(e){this.currentError=d(e)}this.currentPw=""}}render(){return t(r,null,t("div",{class:{modal:!0,"is-active":this.visible}},t("div",{class:"modal-background"}),t("div",{class:"modal-card"},t("header",{class:"modal-card-head"},t("p",{class:"modal-card-title"},"Login"),t("button",{class:"delete","aria-label":"close",onClick:()=>this.close.emit()})),t("section",{class:"modal-card-body"},t("form",{onSubmit:e=>{e.preventDefault(),this.login()}},t("div",{class:{"notification is-danger":!0,"is-hidden":0==this.currentError.length}},t("button",{class:"delete",onClick:()=>this.currentError=""}),this.currentError),t("div",{class:"field has-addons"},t("p",{class:"control"},t("input",{type:"password",class:{input:!0,"is-danger":this.currentError.length>0},placeholder:"Password",value:this.currentPw,onChange:e=>this.currentPw=e.target.value.trim()})),t("p",{class:"control"},t("a",{class:"button is-primary",onClick:()=>this.login()},"Login"))))))))}};function J(e){this.message=e}(function(e,t,a,n){var s,r=arguments.length,i=r<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,a,n);else for(var o=e.length-1;o>=0;o--)(s=e[o])&&(i=(r<3?s(i):r>3?s(t,a,i):s(t,a))||i);r>3&&i&&Object.defineProperty(t,a,i)})([p.Context("api")],$.prototype,"apiClient",void 0),$.style=":host{display:block}",(J.prototype=new Error).name="InvalidCharacterError";var V="undefined"!=typeof window&&window.atob&&window.atob.bind(window)||function(e){var t=String(e).replace(/=+$/,"");if(t.length%4==1)throw new J("'atob' failed: The string to be decoded is not correctly encoded.");for(var a,n,s=0,r=0,i="";n=t.charAt(r++);~n&&(a=s%4?64*a+n:n,s++%4)?i+=String.fromCharCode(255&a>>(-2*s&6)):0)n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(n);return i};function Y(e){this.message=e}(Y.prototype=new Error).name="InvalidTokenError";var X=function(e,t){if("string"!=typeof e)throw new Y("Invalid token specified");var a=!0===(t=t||{}).header?0:1;try{return JSON.parse(function(e){var t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw"Illegal base64url string!"}try{return function(e){return decodeURIComponent(V(e).replace(/(.)/g,(function(e,t){var a=t.charCodeAt(0).toString(16).toUpperCase();return a.length<2&&(a="0"+a),"%"+a})))}(t)}catch(e){return V(t)}}(e.split(".")[a]))}catch(e){throw new Y("Invalid token specified: "+e.message)}};X.InvalidTokenError=Y;var Z=function(e,t,a,n){var s,r=arguments.length,i=r<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,a,n);else for(var o=e.length-1;o>=0;o--)(s=e[o])&&(i=(r<3?s(i):r>3?s(t,a,i):s(t,a))||i);return r>3&&i&&Object.defineProperty(t,a,i),i};const ee="TO4ST-core_Token",te=class{constructor(t){e(this,t)}async refreshAppConfig(e=null){if(e)this.appConfig=e;else try{this.appConfig=await this.api.client.chain.query.appConfig({cached:!this.isAdmin}).execute({instanceId:!0,publicStats:!0,publicBanQuery:!0,banlistPartners:!0,masterserverKey:!0,steamWebApiKey:!0,ownAddress:!0,appInfo:{uniquePlayers:!0,gamesPlayed:!0,roundsPlayed:!0,activeBans:!0}})}catch(e){console.error(e)}}async componentWillLoad(){const e=localStorage.getItem(ee);this.api=H();const t=(null==e?void 0:e.length)>0?X(e):null;if(null==t?void 0:t.exp){const a=new Date(1e3*t.exp),n=new Date((new Date).valueOf()-864e5);if(a.valueOf()>n.valueOf()){this.api=H(e);try{await this.api.client.chain.query.authValid.execute()?this.isAdmin=!0:(localStorage.removeItem(ee),this.api=H())}catch(e){localStorage.removeItem(ee),this.api=H(),console.error(e)}}}await this.refreshAppConfig()}async afterSuccessfulLogin(e){localStorage.setItem(ee,e.token),this.isAdmin=!0,this.appConfig=e.appconfig,this.loginOpen=!1,this.api=await H(e.token)}logout(){this.isAdmin=!1,localStorage.removeItem(ee)}render(){return t("div",null,t("to4st-header",{onLogin:()=>this.loginOpen=!0,onLogout:()=>this.logout()}),t("to4st-login-modal",{visible:this.loginOpen,onClose:()=>this.loginOpen=!1,onSuccessfulLogin:e=>this.afterSuccessfulLogin(e.detail)}),t("main",null,t("stencil-router",null,t("stencil-route-switch",{scrollTopOffset:0},t("stencil-route",{url:"/",component:"to4st-home",exact:!0}),t("stencil-route",{url:"/to4st-settings",component:"to4st-settings"}),t("stencil-route",{url:"/gameserver-settings",component:"to4st-gameserver-settings"}),t("stencil-route",{url:"/registered-players",component:"to4st-registered-players-settings"}),t("stencil-route",{url:"/player-statistics",component:"to4st-player-statistics"})))))}};Z([p.Provide("api")],te.prototype,"api",void 0),Z([p.Provide("appConfig")],te.prototype,"appConfig",void 0),Z([p.Provide("isAdmin")],te.prototype,"isAdmin",void 0),te.style="to4st-root{overflow-y:auto}";export{G as stencil_route,U as stencil_route_link,W as stencil_route_switch,E as stencil_router,q as to4st_header,$ as to4st_login_modal,te as to4st_root}