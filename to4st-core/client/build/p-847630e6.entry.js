import{r as e,h as t,H as a}from"./p-89d64653.js";import{a as n}from"./p-53397e03.js";import{e as l}from"./p-b4a30ea7.js";import"./p-3ca83edf.js";import{G as o,e as i}from"./p-8b7e42d6.js";import"./p-ee768a2e.js";import"./p-01c079a6.js";import"./p-18a1d9b0.js";import"./p-e088c0a0.js";var s=function(e,t,a,n){var l,o=arguments.length,i=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,a,n);else for(var s=e.length-1;s>=0;s--)(l=e[s])&&(i=(o<3?l(i):o>3?l(t,a,i):l(t,a))||i);return o>3&&i&&Object.defineProperty(t,a,i),i};const r={currentName:"TO4 Gameserver",voteLength:25,gamePassword:"",reservedSlots:0,balanceClans:!0,allowSkipMapVote:!0,tempKickBanTime:30,autoRecordReplay:!1,playerGameControl:!1,enableMapVote:!0,serverAdmins:"",serverDescription:"",website:"",contact:"",mapNoReplay:3,enableVoicechat:!0},u=class{constructor(a){e(this,a),this.defaultGameserverConfig=r,this.columns=[{name:"Current Name",tableContent:e=>{var a;return t("p",null,null===(a=null==e?void 0:e.gameserver)||void 0===a?void 0:a.currentName)},detailInput:(e,a)=>{var n;return t("input",{type:"text",placeholder:"Current Name",value:null!==(n=null==e?void 0:e.currentName)&&void 0!==n?n:"",class:"input",onChange:e=>a("currentName",e.target.value.trim())})},sortable:!0},{name:"Id",tableContent:e=>{var a;return t("p",null,null===(a=null==e?void 0:e.gameserver)||void 0===a?void 0:a.id)},hiddenMobile:()=>!0},{name:"Has config",tableContent:e=>{var a;return t("p",null,this.getSymbol(!!(null===(a=null==e?void 0:e.gameserver)||void 0===a?void 0:a.gameserverConfig)))},hiddenMobile:()=>!0,sortable:()=>!0},{name:"Current Match Config",shouldBeVisible:()=>!1,detailInput:(e,a)=>t("div",{class:"select"},t("select",{onChange:e=>{var t;return a("currentMatchConfig",{id:null===(t=this.matchConfigs.find((t=>t.configName===e.target.value.trim())))||void 0===t?void 0:t.id})}},this.matchConfigs.map((a=>{var n;return t("option",{selected:(null===(n=null==e?void 0:e.currentMatchConfig)||void 0===n?void 0:n.configName)===a.configName},a.configName)}))))},{name:"Game Password",shouldBeVisible:()=>!1,detailInput:(e,a)=>{var n;return t("input",{type:"text",placeholder:"Game Password",value:null!==(n=null==e?void 0:e.gamePassword)&&void 0!==n?n:"",class:"input",onChange:e=>a("gamePassword",e.target.value.trim())})}},{name:"Reserved Slots",detailInput:(e,a)=>{var n;return t("input",{type:"number",placeholder:"Reserved slots",min:"0",max:"100",value:null!==(n=null==e?void 0:e.reservedSlots)&&void 0!==n?n:0,class:"input",onChange:e=>a("reservedSlots",parseInt(e.target.value))})},shouldBeVisible:()=>!1},{name:"Balance Clans",detailInput:(e,a)=>t("to4st-switch",{value:null==e?void 0:e.balanceClans,onToggle:e=>a("balanceClans",e.detail)}),shouldBeVisible:()=>!1},{name:"Allow Skip Mapvote",detailInput:(e,a)=>t("to4st-switch",{value:null==e?void 0:e.allowSkipMapVote,onToggle:e=>a("allowSkipMapVote",e.detail)}),shouldBeVisible:()=>!1},{name:"Temp Kick Ban Time",detailInput:(e,a)=>{var n;return t("input",{type:"number",placeholder:"Temp Kick Ban Time",min:"1",value:null!==(n=null==e?void 0:e.tempKickBanTime)&&void 0!==n?n:0,class:"input",onChange:e=>a("tempKickBanTime",parseInt(e.target.value))})},shouldBeVisible:()=>!1},{name:"Auto Record Replay",detailInput:(e,a)=>t("to4st-switch",{value:null==e?void 0:e.autoRecordReplay,onToggle:e=>a("autoRecordReplay",e.detail)}),shouldBeVisible:()=>!1},{name:"Player Game Control",detailInput:(e,a)=>t("to4st-switch",{value:null==e?void 0:e.playerGameControl,onToggle:e=>a("playerGameControl",e.detail)}),shouldBeVisible:()=>!1,tooltip:()=>"Players can vote for match actions (reset, map change, pause)"},{name:"Enable Mapvote",detailInput:(e,a)=>t("to4st-switch",{value:null==e?void 0:e.enableMapVote,onToggle:e=>a("enableMapVote",e.detail)}),shouldBeVisible:()=>!1},{name:"Vote Length",detailInput:(e,a)=>{var n;return t("input",{type:"number",placeholder:"Vote Length",min:"5",value:null!==(n=null==e?void 0:e.voteLength)&&void 0!==n?n:0,class:"input",onChange:e=>a("voteLength",parseInt(e.target.value))})},shouldBeVisible:()=>!1},{name:"Server Admins",detailInput:(e,a)=>{var n;return t("input",{type:"text",placeholder:"Server Admins",value:null!==(n=null==e?void 0:e.serverAdmins)&&void 0!==n?n:"",class:"input",onChange:e=>a("serverAdmins",e.target.value.trim())})},shouldBeVisible:()=>!1},{name:"Server Description",detailInput:(e,a)=>{var n;return t("input",{type:"text",placeholder:"Server Description",value:null!==(n=null==e?void 0:e.serverDescription)&&void 0!==n?n:"",class:"input",onChange:e=>a("serverDescription",e.target.value.trim())})},shouldBeVisible:()=>!1},{name:"Website",detailInput:(e,a)=>{var n;return t("input",{type:"text",placeholder:"Website",value:null!==(n=null==e?void 0:e.website)&&void 0!==n?n:"",class:"input",onChange:e=>a("website",e.target.value.trim())})},shouldBeVisible:()=>!1},{name:"Contact",detailInput:(e,a)=>{var n;return t("input",{type:"text",placeholder:"Contact",value:null!==(n=null==e?void 0:e.contact)&&void 0!==n?n:"",class:"input",onChange:e=>a("contact",e.target.value.trim())})},shouldBeVisible:()=>!1},{name:"Map No Replay",detailInput:(e,a)=>{var n;return t("input",{type:"number",placeholder:"Map No Replay",min:"0",max:"30",value:null!==(n=null==e?void 0:e.mapNoReplay)&&void 0!==n?n:0,class:"input",onChange:e=>a("warmUpLength",parseInt(e.target.value))})},shouldBeVisible:()=>!1,tooltip:()=>"A map can't be voted for the given count of map switches"},{name:"Enable Voicechat",detailInput:(e,a)=>t("to4st-switch",{value:null==e?void 0:e.enableVoicechat,onToggle:e=>a("enableVoicechat",e.detail)}),shouldBeVisible:()=>!1}]}onMatchConfigsUpdated(){void 0!==this.matchConfigs&&(!this.defaultGameserverConfig.currentMatchConfig&&this.matchConfigs.length>0&&(this.defaultGameserverConfig.currentMatchConfig=this.matchConfigs[0]),this.columns=[...this.columns])}async saveGameserverConfig(e,t,a){const n=e;try{await o.get(this.apiClient).createUpdateGameserverConfig({gameserverId:n.gameserver.id,currentMatchConfigId:n.currentMatchConfig.id,currentGameserverName:n.currentName,voteLength:n.voteLength,tempKickBanTime:n.tempKickBanTime,gamePassword:n.gamePassword,serverAdmins:n.serverAdmins,serverDescription:n.serverDescription,website:n.website,contact:n.contact,reservedSlots:n.reservedSlots,mapNoReplay:n.mapNoReplay,balanceClans:n.balanceClans,allowSkipMapVote:n.allowSkipMapVote,autoRecordReplay:n.autoRecordReplay,playerGameControl:n.playerGameControl,enableMapVote:n.enableMapVote,enableVoicechat:n.enableVoicechat},t),a.emit("")}catch(e){a.emit(l(e)),console.error(e)}}getSymbol(e){return t("i",e?{class:"fas fa-check"}:{class:"fas fa-times"})}async removeGameserverConfig(e,t){const a=e;try{await o.get(this.apiClient).deleteGameserverConfig(a.gameserver.id)}catch(e){console.error(e)}t()}async updateGameserverConfigs(e,t,a,n,l){try{const[s,u]=await await o.get(this.apiClient).gameservers(e,15,t,n,a);l(s.map((e=>Object.assign(Object.assign({},r),i(e,r)))),u)}catch(e){console.error(e),l([],1)}}render(){return t(a,null,t("to4st-details",{name:"Gameservers",columns:this.columns,hasSearch:!0,defaultCreateObject:this.defaultGameserverConfig,mapOrderByAssign:e=>"Current Name"===e?"currentName":"hasConfig",canItemBeDeleted:e=>{var t;return!!(null===(t=null==e?void 0:e.gameserver)||void 0===t?void 0:t.gameserverConfig)},onUpdateEntities:e=>this.updateGameserverConfigs(e.detail.page,e.detail.search,e.detail.orderBy,e.detail.orderDesc,e.detail.onFetchedData),onSaveEntity:e=>this.saveGameserverConfig(e.detail.entity,e.detail.transactionId,e.detail.afterEx),onDeleteEntity:e=>this.removeGameserverConfig(e.detail.entity,e.detail.onDeletedEntity)}))}};s([n.Context("api")],u.prototype,"apiClient",void 0),s([n.Context("matchConfigs")],u.prototype,"matchConfigs",void 0),s([n.Observe("matchConfigs")],u.prototype,"onMatchConfigsUpdated",null),u.style="";var d=function(e,t,a,n){var l,o=arguments.length,i=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,a,n);else for(var s=e.length-1;s>=0;s--)(l=e[s])&&(i=(o<3?l(i):o>3?l(t,a,i):l(t,a))||i);return o>3&&i&&Object.defineProperty(t,a,i),i},p=function(e,t){var a={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var l=0;for(n=Object.getOwnPropertySymbols(e);l<n.length;l++)t.indexOf(n[l])<0&&Object.prototype.propertyIsEnumerable.call(e,n[l])&&(a[n[l]]=e[n[l]])}return a};const c={gameMode:{name:"Classic"},matchEndLength:10,warmUpLength:30,friendlyFireScale:20,mapLength:20,roundLength:180,preRoundLength:6,roundEndLength:5,roundLimit:24,allowGhostcam:!0,playerVoteThreshold:60,autoBalanceTeams:!0,playerVoteTeamOnly:!1,maxTeamDamage:520,enablePlayerVote:!0,autoSwapTeams:!1,midGameBreakLength:0,nadeRestriction:!0,globalVoicechat:!1,muteDeadToTeam:!1,ranked:!1,private:!1},h=class{constructor(a){e(this,a),this.gameModes=[],this.columns=[{name:"Id",tableContent:e=>t("p",null,null==e?void 0:e.id)},{name:"Config Name",tableContent:e=>t("p",null,null==e?void 0:e.configName),detailInput:(e,a)=>{var n;return t("input",{type:"text",placeholder:"Config Name",value:null!==(n=null==e?void 0:e.configName)&&void 0!==n?n:"",class:"input",onChange:e=>a("configName",e.target.value.trim())})},input:(e,a)=>{var n;return t("input",{type:"text",placeholder:"Config Name",value:null!==(n=null==e?void 0:e.configName)&&void 0!==n?n:"",class:"input",onChange:e=>a.emit({key:"configName",value:e.target.value.trim()})})},sortable:!0},{name:"Game Mode",tableContent:e=>{var a;return t("p",null,null===(a=null==e?void 0:e.gameMode)||void 0===a?void 0:a.name)},detailInput:(e,a)=>t("div",{class:"select"},t("select",{onChange:e=>a("gameMode",{name:e.target.value.trim()})},this.gameModes.map((a=>{var n;return t("option",{selected:(null===(n=null==e?void 0:e.gameMode)||void 0===n?void 0:n.name)===a.name},a.name)}))))},{name:"Config Hash",tableContent:e=>t("p",null,null==e?void 0:e.configHash),hiddenMobile:()=>!0},{name:"Matchend Length",shouldBeVisible:()=>!1,detailInput:(e,a)=>{var n;return t("input",{type:"number",placeholder:"Matchend Length",min:"1",max:"60",value:null!==(n=null==e?void 0:e.matchEndLength)&&void 0!==n?n:0,class:"input",onChange:e=>a("matchendLength",parseInt(e.target.value))})}},{name:"Warm Up Length",shouldBeVisible:()=>!1,detailInput:(e,a)=>{var n;return t("input",{type:"number",placeholder:"Warm Up Length",min:"1",max:"300",value:null!==(n=null==e?void 0:e.warmUpLength)&&void 0!==n?n:0,class:"input",onChange:e=>a("warmUpLength",parseInt(e.target.value))})}},{name:"Friendly Fire Scale",shouldBeVisible:()=>!1,detailInput:(e,a)=>{var n;return t("input",{type:"number",placeholder:"Friendly Fire Scale",min:"0",max:"100",step:"0.5",value:null!==(n=null==e?void 0:e.friendlyFireScale)&&void 0!==n?n:0,class:"input",onChange:e=>a("friendlyFireScale",parseFloat(e.target.value))})}},{name:"Map Length",shouldBeVisible:()=>!1,detailInput:(e,a)=>{var n;return t("input",{type:"number",placeholder:"Map Length",min:"1",max:"99",value:null!==(n=null==e?void 0:e.mapLength)&&void 0!==n?n:0,class:"input",onChange:e=>a("mapLength",parseInt(e.target.value))})}},{name:"Round Length",shouldBeVisible:()=>!1,detailInput:(e,a)=>{var n;return t("input",{type:"number",placeholder:"Round Length",min:"1",max:"3599",value:null!==(n=null==e?void 0:e.roundLength)&&void 0!==n?n:0,class:"input",onChange:e=>a("roundLength",parseInt(e.target.value))})}},{name:"Pre Round Length",shouldBeVisible:()=>!1,detailInput:(e,a)=>{var n;return t("input",{type:"number",placeholder:"Pre Round Length",min:"1",max:"20",value:null!==(n=null==e?void 0:e.preRoundLength)&&void 0!==n?n:0,class:"input",onChange:e=>a("preRoundLength",parseInt(e.target.value))})}},{name:"Round End Length",shouldBeVisible:()=>!1,detailInput:(e,a)=>{var n;return t("input",{type:"number",placeholder:"Round End Length",min:"1",max:"20",value:null!==(n=null==e?void 0:e.roundEndLength)&&void 0!==n?n:0,class:"input",onChange:e=>a("roundEndLength",parseInt(e.target.value))})}},{name:"Round Limit",shouldBeVisible:()=>!1,detailInput:(e,a)=>{var n;return t("input",{type:"number",placeholder:"Round Limit",min:"0",max:"99",value:null!==(n=null==e?void 0:e.roundLimit)&&void 0!==n?n:0,class:"input",onChange:e=>a("roundLimit",parseInt(e.target.value))})}},{name:"Allow Ghostcam",shouldBeVisible:()=>!1,detailInput:(e,a)=>t("to4st-switch",{value:null==e?void 0:e.allowGhostcam,onToggle:e=>a("allowGhostcam",e.detail)})},{name:"Player Vote Threshold",shouldBeVisible:()=>!1,detailInput:(e,a)=>{var n;return t("input",{type:"number",min:"0",max:"100",step:"0.5",placeholder:"Friendly Fire Scale",value:null!==(n=null==e?void 0:e.playerVoteThreshold)&&void 0!==n?n:0,class:"input",onChange:e=>a("playerVoteThreshold",parseFloat(e.target.value))})}},{name:"Auto Balance Teams",detailInput:(e,a)=>t("to4st-switch",{value:null==e?void 0:e.autoBalanceTeams,onToggle:e=>a("autoBalanceTeams",e.detail)}),shouldBeVisible:()=>!1,tooltip:()=>"Swaps players automatically to keep teams even"},{name:"Player Vote Team Only",detailInput:(e,a)=>t("to4st-switch",{value:null==e?void 0:e.playerVoteTeamOnly,onToggle:e=>a("playerVoteTeamOnly",e.detail)}),shouldBeVisible:()=>!1},{name:"Max Team Damage",detailInput:(e,a)=>{var n;return t("input",{type:"number",placeholder:"Max Team Damage",min:"0",max:"99999",value:null!==(n=null==e?void 0:e.maxTeamDamage)&&void 0!==n?n:0,class:"input",onChange:e=>a("maxTeamDamage",parseInt(e.target.value))})},shouldBeVisible:()=>!1},{name:"Enable Player Vote",shouldBeVisible:()=>!1,detailInput:(e,a)=>t("to4st-switch",{value:null==e?void 0:e.enablePlayerVote,onToggle:e=>a("enablePlayerVote",e.detail)}),tooltip:()=>"Players can vote other players out"},{name:"Auto Swap Teams",shouldBeVisible:()=>!1,detailInput:(e,a)=>t("to4st-switch",{value:null==e?void 0:e.autoSwapTeams,onToggle:e=>a("autoSwapTeams",e.detail)}),tooltip:()=>"If a roundlimit is used the players swap teams after half of the rounds"},{name:"Mid Game Break Length",shouldBeVisible:()=>!1,detailInput:(e,a)=>{var n;return t("input",{type:"number",placeholder:"Mid Game Break Length",min:"0",max:"300",value:null!==(n=null==e?void 0:e.midGameBreakLength)&&void 0!==n?n:0,class:"input",onChange:e=>a("midGameBreakLength",parseInt(e.target.value))})},tooltip:()=>"If a roundlimit is used the game pauses for given seconds when half of the rounds are over"},{name:"Nade Restriction",shouldBeVisible:()=>!1,detailInput:(e,a)=>t("to4st-switch",{value:null==e?void 0:e.nadeRestriction,onToggle:e=>a("nadeRestriction",e.detail)}),tooltip:()=>"Only one nade of each kind can be bought at round begin"},{name:"Global Voicechat",shouldBeVisible:()=>!1,detailInput:(e,a)=>t("to4st-switch",{value:null==e?void 0:e.globalVoicechat,onToggle:e=>a("globalVoicechat",e.detail)})},{name:"Mute Dead To Team",shouldBeVisible:()=>!1,detailInput:(e,a)=>t("to4st-switch",{value:null==e?void 0:e.muteDeadToTeam,onToggle:e=>a("muteDeadToTeam",e.detail)})},{name:"Ranked",shouldBeVisible:()=>!1,detailInput:(e,a)=>t("to4st-switch",{value:null==e?void 0:e.ranked,onToggle:e=>a("ranked",e.detail)}),tooltip:()=>"Allows to seperate ranked / unranked player stats"},{name:"Private",shouldBeVisible:()=>!1,detailInput:(e,a)=>t("to4st-switch",{value:null==e?void 0:e.private,onToggle:e=>a("private",e.detail)}),tooltip:()=>"Server requires password or reserved slot access"}]}async componentWillLoad(){(async()=>{const[e]=await o.get(this.apiClient).gamemodes();this.gameModes=e})().catch((e=>console.error("error while loading gameModes",e)))}async saveMatchConfig(e,t,a){let n=e;n.id||(n=Object.assign(Object.assign({},n),c));try{this.apiClient.setTransactionId(t),await o.get(this.apiClient).createUpdateMatchConfig({id:n.id,configName:n.configName,gameMode:{name:n.gameMode.name},matchEndLength:n.matchEndLength,warmUpLength:n.warmUpLength,friendlyFireScale:n.friendlyFireScale,mapLength:n.mapLength,roundLength:n.roundLength,preRoundLength:n.preRoundLength,roundEndLength:n.roundEndLength,roundLimit:n.roundLimit,allowGhostcam:n.allowGhostcam,playerVoteThreshold:n.playerVoteThreshold,autoBalanceTeams:n.autoBalanceTeams,playerVoteTeamOnly:n.playerVoteTeamOnly,maxTeamDamage:n.maxTeamDamage,enablePlayerVote:n.enablePlayerVote,autoSwapTeams:n.autoSwapTeams,midGameBreakLength:n.midGameBreakLength,nadeRestriction:n.nadeRestriction,globalVoicechat:n.globalVoicechat,muteDeadToTeam:n.muteDeadToTeam,ranked:n.ranked,private:n.private},t),a.emit("")}catch(e){a.emit(l(e)),console.error(e)}}async removeMatchConfig(e,t){const a=e;try{await o.get(this.apiClient).deleteMatchConfig(a.id)}catch(e){console.error(e)}t()}async updateMatchConfigs(e,t,a,n,l){try{const[a,i]=await o.get(this.apiClient).matchConfigs(e,15,t,n);this.matchConfigs=a,l(a,i)}catch(e){console.error(e),l([],1)}}render(){return t(a,null,t("to4st-details",{name:"Match Configs",columns:this.columns,hasSearch:!0,mapPreSerializeEntity:e=>({mapped:p(e,["id"]),fileName:e.configName}),useDefaultListCreate:!0,onUpdateEntities:e=>this.updateMatchConfigs(e.detail.page,e.detail.search,e.detail.orderBy,e.detail.orderDesc,e.detail.onFetchedData),onSaveEntity:e=>this.saveMatchConfig(e.detail.entity,e.detail.transactionId,e.detail.afterEx),onDeleteEntity:e=>this.removeMatchConfig(e.detail.entity,e.detail.onDeletedEntity)}))}};d([n.Context("api")],h.prototype,"apiClient",void 0),d([n.Context("matchConfigs")],h.prototype,"matchConfigs",void 0),h.style="";export{u as to4st_gameserver_config_list,h as to4st_match_config_list}