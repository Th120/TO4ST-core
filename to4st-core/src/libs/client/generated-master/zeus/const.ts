/* eslint-disable */

export const AllTypesProps: Record<string,any> = {
	DateTime: "String",
	Team: "enum",
	WeaponType: "enum",
	Query:{
		appConfig:{
			cached:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		authKeys:{
			options:{
				type:"AuthKeyQuery",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		authKey:{
			authKey:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		communityBackend:{
			id:{
				type:"Float",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		communityBackends:{
			options:{
				type:"CommunityBackendQuery",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		games:{
			options:{
				type:"GameQuery",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		game:{
			gameId:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		rounds:{
			options:{
				type:"RoundQuery",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		round:{
			roundId:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		playerRoundStats:{
			options:{
				type:"PlayerRoundStatsQuery",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		playerRoundWeaponStats:{
			options:{
				type:"PlayerRoundWeaponStatsQuery",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		playerStatistics:{
			options:{
				type:"PlayerStatisticsQuery",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		playerWeaponStatistics:{
			options:{
				type:"PlayerWeaponStatisticsQuery",
				array:false,
				arrayRequired:false,
				required:true
			}
		}
	},
	AuthKeyQuery:{
		page:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		pageSize:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		search:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		orderDesc:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	CommunityBackendQuery:{
		page:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		pageSize:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		search:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		maxAge:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		orderDesc:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	GameQuery:{
		page:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		pageSize:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		orderDesc:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		gameserverId:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		startedAfter:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		startedBefore:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		endedAfter:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		endedBefore:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		map:{
			type:"ServerMapInput",
			array:false,
			arrayRequired:false,
			required:false
		},
		gameMode:{
			type:"GameModeInput",
			array:false,
			arrayRequired:false,
			required:false
		},
		onlyFinishedGames:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	ServerMapInput:{
		name:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	GameModeInput:{
		name:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		isTeamBased:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	RoundQuery:{
		page:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		pageSize:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		orderDesc:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		gameId:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		startedAfter:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		startedBefore:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		onlyFinishedRounds:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	PlayerRoundStatsQuery:{
		page:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		pageSize:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		roundId:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	PlayerRoundWeaponStatsQuery:{
		page:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		pageSize:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		roundId:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	PlayerStatisticsQuery:{
		steamId64:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		page:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		pageSize:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		orderDesc:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		orderBy:{
			type:"OrderPlayerBaseStats",
			array:false,
			arrayRequired:false,
			required:false
		},
		gameModeName:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		roundId:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		gameId:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		startedAfter:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		startedBefore:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		endedAfter:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		endedBefore:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		onlyFinishedRounds:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	OrderPlayerBaseStats: "enum",
	PlayerWeaponStatisticsQuery:{
		steamId64:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		gameModeName:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		roundId:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		gameId:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		startedAfter:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		startedBefore:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		endedAfter:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		endedBefore:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		onlyFinishedRounds:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Mutation:{
		updateAppConfig:{
			appConfig:{
				type:"AppConfigInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteAuthKey:{
			authKey:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		createUpdateAuthKey:{
			authKey:{
				type:"AuthKeyInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		login:{
			password:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		loginDev:{
			password:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		createUpdateCommunityBackend:{
			communityBackend:{
				type:"CommunityBackendInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteCommunityBackend:{
			id:{
				type:"Float",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		heartBeat:{
			address:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteGames:{
			gameInputs:{
				type:"GameInput",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		deleteRounds:{
			roundInputs:{
				type:"RoundInput",
				array:true,
				arrayRequired:true,
				required:true
			}
		}
	},
	AppConfigInput:{
		steamWebApiKey:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		password:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	AuthKeyInput:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		authKey:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	CommunityBackendInput:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		masterserverKey:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		contact:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		enabledForStatisticsAggregation:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	GameInput:{
		id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		gameserverId:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		startedAt:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		endedAt:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		map:{
			type:"ServerMapInput",
			array:false,
			arrayRequired:false,
			required:false
		},
		gameMode:{
			type:"GameModeInput",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	RoundInput:{
		id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		gameId:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		startedAt:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		endedAt:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		scoreSpecialForces:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		scoreTerrorists:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	}
}

export const ReturnTypes: Record<string,any> = {
	AuthKey:{
		id:"Int",
		authKey:"String",
		description:"String",
		lastUse:"DateTime"
	},
	AppConfig:{
		instanceId:"String",
		steamWebApiKey:"String"
	},
	SteamUser:{
		steamId64:"String",
		name:"String",
		avatarBigUrl:"String",
		avatarMediumUrl:"String"
	},
	PaginatedAuthKey:{
		content:"AuthKey",
		totalCount:"Int",
		pageCount:"Int"
	},
	CommunityBackend:{
		id:"Int",
		masterserverKey:"String",
		description:"String",
		contact:"String",
		lastUrl:"String",
		enabledForStatisticsAggregation:"Boolean",
		lastHeartbeat:"DateTime",
		currentState:"DateTime",
		lastUpdateAttempt:"DateTime",
		aggregationRunningSince:"DateTime"
	},
	LoginResponse:{
		appConfig:"AppConfig",
		jwt:"String"
	},
	ServerMap:{
		name:"String"
	},
	GameMode:{
		name:"String",
		isTeamBased:"Boolean"
	},
	MatchConfig:{
		id:"Int",
		configName:"String",
		gameMode:"GameMode",
		configHash:"String",
		matchEndLength:"Int",
		warmUpLength:"Int",
		friendlyFireScale:"Float",
		mapLength:"Int",
		roundLength:"Int",
		preRoundLength:"Int",
		roundEndLength:"Int",
		roundLimit:"Int",
		allowGhostcam:"Boolean",
		playerVoteThreshold:"Float",
		autoBalanceTeams:"Boolean",
		playerVoteTeamOnly:"Boolean",
		maxTeamDamage:"Float",
		enablePlayerVote:"Boolean",
		autoSwapTeams:"Boolean",
		midGameBreakLength:"Int",
		nadeRestriction:"Boolean",
		globalVoicechat:"Boolean",
		muteDeadToTeam:"Boolean",
		ranked:"Boolean",
		private:"Boolean"
	},
	Game:{
		id:"String",
		gameserverId:"String",
		matchConfig:"MatchConfig",
		communityBackend:"CommunityBackend",
		startedAt:"DateTime",
		endedAt:"DateTime",
		map:"ServerMap",
		gameMode:"GameMode",
		rounds:"Round"
	},
	Round:{
		id:"String",
		game:"Game",
		startedAt:"DateTime",
		endedAt:"DateTime",
		scoreSpecialForces:"Int",
		scoreTerrorists:"Int"
	},
	PlayerRoundStats:{
		round:"Round",
		steamId64:"String",
		kills:"Int",
		deaths:"Int",
		suicides:"Int",
		totalDamage:"Float",
		score:"Int",
		team:"Team",
		steamUser:"SteamUser"
	},
	Weapon:{
		name:"String",
		weaponType:"WeaponType"
	},
	PlayerRoundWeaponStats:{
		steamId64:"String",
		round:"Round",
		weapon:"Weapon",
		totalDamage:"Float",
		shotsHead:"Int",
		shotsChest:"Int",
		shotsLegs:"Int",
		shotsArms:"Int",
		shotsFired:"Int",
		steamUser:"SteamUser"
	},
	PaginatedCommunityBackend:{
		content:"CommunityBackend",
		totalCount:"Int",
		pageCount:"Int"
	},
	PaginatedGame:{
		content:"Game",
		totalCount:"Int",
		pageCount:"Int"
	},
	PaginatedGameMode:{
		content:"GameMode",
		totalCount:"Int",
		pageCount:"Int"
	},
	PaginatedPlayerRoundStats:{
		content:"PlayerRoundStats",
		totalCount:"Int",
		pageCount:"Int"
	},
	PaginatedPlayerRoundWeaponStats:{
		content:"PlayerRoundWeaponStats",
		totalCount:"Int",
		pageCount:"Int"
	},
	PaginatedRound:{
		content:"Round",
		totalCount:"Int",
		pageCount:"Int"
	},
	PlayerWeaponStatistics:{
		steamId64:"String",
		totalDamage:"Float",
		totalShots:"Int",
		shotsChest:"Int",
		shotsLegs:"Int",
		shotsArms:"Int",
		shotsHead:"Int",
		weapon:"Weapon",
		steamUser:"SteamUser"
	},
	PlayerStatistics:{
		steamId64:"String",
		rank:"Int",
		kills:"Int",
		deaths:"Int",
		suicides:"Int",
		killDeathRatio:"Float",
		totalScore:"Int",
		totalDamage:"Float",
		numberGamesPlayed:"Int",
		numberRoundsPlayed:"Int",
		avgDamagePerRound:"Float",
		avgScorePerRound:"Float",
		steamUser:"SteamUser"
	},
	PaginatedPlayerStatistics:{
		content:"PlayerStatistics",
		totalCount:"Int",
		pageCount:"Int"
	},
	Query:{
		appConfig:"AppConfig",
		authKeys:"PaginatedAuthKey",
		authKey:"AuthKey",
		authValid:"Boolean",
		communityBackend:"CommunityBackend",
		communityBackends:"PaginatedCommunityBackend",
		games:"PaginatedGame",
		game:"Game",
		rounds:"PaginatedRound",
		round:"Round",
		gameModes:"PaginatedGameMode",
		playerRoundStats:"PaginatedPlayerRoundStats",
		playerRoundWeaponStats:"PaginatedPlayerRoundWeaponStats",
		playerStatistics:"PaginatedPlayerStatistics",
		playerWeaponStatistics:"PlayerWeaponStatistics"
	},
	Mutation:{
		updateAppConfig:"AppConfig",
		deleteAuthKey:"Boolean",
		createUpdateAuthKey:"AuthKey",
		login:"LoginResponse",
		loginDev:"LoginResponse",
		createUpdateCommunityBackend:"CommunityBackend",
		deleteCommunityBackend:"Boolean",
		heartBeat:"Boolean",
		deleteGames:"Boolean",
		deleteRounds:"Boolean"
	}
}