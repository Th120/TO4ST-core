import {MigrationInterface, QueryRunner} from "typeorm";

export class gameserverConfig1605533545693 implements MigrationInterface {
    name = 'gameserverConfig1605533545693'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "match_config" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "configName" varchar NOT NULL, "configHash" varchar NOT NULL, "matchEndLength" smallint NOT NULL, "warmUpLength" smallint NOT NULL, "friendlyFireScale" float NOT NULL, "mapLength" smallint NOT NULL, "roundLength" smallint NOT NULL, "preRoundLength" smallint NOT NULL, "roundEndLength" smallint NOT NULL, "roundLimit" smallint NOT NULL, "allowGhostcam" boolean NOT NULL, "playerVoteThreshold" float NOT NULL, "autoBalanceTeams" boolean NOT NULL, "playerVoteTeamOnly" boolean NOT NULL, "maxTeamDamage" float NOT NULL, "enablePlayerVote" boolean NOT NULL, "autoSwapTeams" boolean NOT NULL, "midGameBreakLength" smallint NOT NULL, "nadeRestriction" boolean NOT NULL, "globalVoicechat" boolean NOT NULL, "muteDeadToTeam" boolean NOT NULL, "ranked" boolean NOT NULL, "private" boolean NOT NULL, "gameModeId" integer NOT NULL, CONSTRAINT "UQ_fbbc00f440d3e086650663cfbc8" UNIQUE ("configName"))`);
        await queryRunner.query(`CREATE INDEX "idx_ranked" ON "match_config" ("ranked") `);
        await queryRunner.query(`CREATE TABLE "gameserver_config" ("currentName" varchar NOT NULL, "voteLength" smallint NOT NULL, "gamePassword" varchar NOT NULL, "reservedSlots" smallint NOT NULL, "balanceClans" boolean NOT NULL, "allowSkipMapVote" boolean NOT NULL, "tempKickBanTime" smallint NOT NULL, "autoRecordReplay" boolean NOT NULL, "playerGameControl" boolean NOT NULL, "enableMapVote" boolean NOT NULL, "serverAdmins" varchar NOT NULL DEFAULT (''), "serverDescription" varchar NOT NULL DEFAULT (''), "website" varchar NOT NULL DEFAULT (''), "contact" varchar NOT NULL DEFAULT (''), "mapNoReplay" smallint NOT NULL, "enableVoicechat" boolean NOT NULL, "gameserverId" varchar PRIMARY KEY NOT NULL, "currentMatchConfigId" integer NOT NULL, CONSTRAINT "REL_e81629bd2734cc6621e92a8897" UNIQUE ("gameserverId"))`);
        await queryRunner.query(`DROP INDEX "IDX_b2c82e7f028dd0320e2cbae75c"`);
        await queryRunner.query(`CREATE TABLE "temporary_gameserver" ("id" varchar PRIMARY KEY NOT NULL, "authKey" varchar NOT NULL, "currentName" varchar NOT NULL DEFAULT (''), "description" varchar NOT NULL DEFAULT (''), "lastContact" datetime NOT NULL, "gameserverConfigGameserver" varchar, CONSTRAINT "UQ_80b9d4bb38444ac266a91b9cf59" UNIQUE ("gameserverConfigGameserver"))`);
        await queryRunner.query(`INSERT INTO "temporary_gameserver"("id", "authKey", "currentName", "description", "lastContact") SELECT "id", "authKey", "currentName", "description", "lastContact" FROM "gameserver"`);
        await queryRunner.query(`DROP TABLE "gameserver"`);
        await queryRunner.query(`ALTER TABLE "temporary_gameserver" RENAME TO "gameserver"`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_b2c82e7f028dd0320e2cbae75c" ON "gameserver" ("authKey") `);
        await queryRunner.query(`DROP INDEX "idx_gameGameMode"`);
        await queryRunner.query(`DROP INDEX "idx_gameEndedAt"`);
        await queryRunner.query(`DROP INDEX "idx_gameStartedAt"`);
        await queryRunner.query(`CREATE TABLE "temporary_game" ("id" varchar PRIMARY KEY NOT NULL, "startedAt" datetime NOT NULL, "endedAt" datetime, "gameserverId" varchar NOT NULL, "mapId" integer NOT NULL, "gameModeId" integer NOT NULL, "matchConfigId" integer, CONSTRAINT "FK_97c8d66b4d906bb743fb0d81b93" FOREIGN KEY ("gameModeId") REFERENCES "game_mode" ("id") ON DELETE CASCADE ON UPDATE NO ACTION, CONSTRAINT "FK_e4a9c8d911c2aaeba97e368202b" FOREIGN KEY ("mapId") REFERENCES "server_map" ("id") ON DELETE CASCADE ON UPDATE NO ACTION, CONSTRAINT "FK_2373cf05d5aec448112acc93b73" FOREIGN KEY ("gameserverId") REFERENCES "gameserver" ("id") ON DELETE CASCADE ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_game"("id", "startedAt", "endedAt", "gameserverId", "mapId", "gameModeId") SELECT "id", "startedAt", "endedAt", "gameserverId", "mapId", "gameModeId" FROM "game"`);
        await queryRunner.query(`DROP TABLE "game"`);
        await queryRunner.query(`ALTER TABLE "temporary_game" RENAME TO "game"`);
        await queryRunner.query(`CREATE INDEX "idx_gameGameMode" ON "game" ("gameModeId") `);
        await queryRunner.query(`CREATE INDEX "idx_gameEndedAt" ON "game" ("endedAt") `);
        await queryRunner.query(`CREATE INDEX "idx_gameStartedAt" ON "game" ("startedAt") `);
        await queryRunner.query(`DROP INDEX "idx_ranked"`);
        await queryRunner.query(`CREATE TABLE "temporary_match_config" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "configName" varchar NOT NULL, "configHash" varchar NOT NULL, "matchEndLength" smallint NOT NULL, "warmUpLength" smallint NOT NULL, "friendlyFireScale" float NOT NULL, "mapLength" smallint NOT NULL, "roundLength" smallint NOT NULL, "preRoundLength" smallint NOT NULL, "roundEndLength" smallint NOT NULL, "roundLimit" smallint NOT NULL, "allowGhostcam" boolean NOT NULL, "playerVoteThreshold" float NOT NULL, "autoBalanceTeams" boolean NOT NULL, "playerVoteTeamOnly" boolean NOT NULL, "maxTeamDamage" float NOT NULL, "enablePlayerVote" boolean NOT NULL, "autoSwapTeams" boolean NOT NULL, "midGameBreakLength" smallint NOT NULL, "nadeRestriction" boolean NOT NULL, "globalVoicechat" boolean NOT NULL, "muteDeadToTeam" boolean NOT NULL, "ranked" boolean NOT NULL, "private" boolean NOT NULL, "gameModeId" integer NOT NULL, CONSTRAINT "UQ_fbbc00f440d3e086650663cfbc8" UNIQUE ("configName"), CONSTRAINT "FK_dd7663370fbf217ac794906fc4e" FOREIGN KEY ("gameModeId") REFERENCES "game_mode" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_match_config"("id", "configName", "configHash", "matchEndLength", "warmUpLength", "friendlyFireScale", "mapLength", "roundLength", "preRoundLength", "roundEndLength", "roundLimit", "allowGhostcam", "playerVoteThreshold", "autoBalanceTeams", "playerVoteTeamOnly", "maxTeamDamage", "enablePlayerVote", "autoSwapTeams", "midGameBreakLength", "nadeRestriction", "globalVoicechat", "muteDeadToTeam", "ranked", "private", "gameModeId") SELECT "id", "configName", "configHash", "matchEndLength", "warmUpLength", "friendlyFireScale", "mapLength", "roundLength", "preRoundLength", "roundEndLength", "roundLimit", "allowGhostcam", "playerVoteThreshold", "autoBalanceTeams", "playerVoteTeamOnly", "maxTeamDamage", "enablePlayerVote", "autoSwapTeams", "midGameBreakLength", "nadeRestriction", "globalVoicechat", "muteDeadToTeam", "ranked", "private", "gameModeId" FROM "match_config"`);
        await queryRunner.query(`DROP TABLE "match_config"`);
        await queryRunner.query(`ALTER TABLE "temporary_match_config" RENAME TO "match_config"`);
        await queryRunner.query(`CREATE INDEX "idx_ranked" ON "match_config" ("ranked") `);
        await queryRunner.query(`CREATE TABLE "temporary_gameserver_config" ("currentName" varchar NOT NULL, "voteLength" smallint NOT NULL, "gamePassword" varchar NOT NULL, "reservedSlots" smallint NOT NULL, "balanceClans" boolean NOT NULL, "allowSkipMapVote" boolean NOT NULL, "tempKickBanTime" smallint NOT NULL, "autoRecordReplay" boolean NOT NULL, "playerGameControl" boolean NOT NULL, "enableMapVote" boolean NOT NULL, "serverAdmins" varchar NOT NULL DEFAULT (''), "serverDescription" varchar NOT NULL DEFAULT (''), "website" varchar NOT NULL DEFAULT (''), "contact" varchar NOT NULL DEFAULT (''), "mapNoReplay" smallint NOT NULL, "enableVoicechat" boolean NOT NULL, "gameserverId" varchar PRIMARY KEY NOT NULL, "currentMatchConfigId" integer NOT NULL, CONSTRAINT "REL_e81629bd2734cc6621e92a8897" UNIQUE ("gameserverId"), CONSTRAINT "FK_e81629bd2734cc6621e92a88971" FOREIGN KEY ("gameserverId") REFERENCES "gameserver" ("id") ON DELETE CASCADE ON UPDATE NO ACTION, CONSTRAINT "FK_8ec518313d27aa5389db772a018" FOREIGN KEY ("currentMatchConfigId") REFERENCES "match_config" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_gameserver_config"("currentName", "voteLength", "gamePassword", "reservedSlots", "balanceClans", "allowSkipMapVote", "tempKickBanTime", "autoRecordReplay", "playerGameControl", "enableMapVote", "serverAdmins", "serverDescription", "website", "contact", "mapNoReplay", "enableVoicechat", "gameserverId", "currentMatchConfigId") SELECT "currentName", "voteLength", "gamePassword", "reservedSlots", "balanceClans", "allowSkipMapVote", "tempKickBanTime", "autoRecordReplay", "playerGameControl", "enableMapVote", "serverAdmins", "serverDescription", "website", "contact", "mapNoReplay", "enableVoicechat", "gameserverId", "currentMatchConfigId" FROM "gameserver_config"`);
        await queryRunner.query(`DROP TABLE "gameserver_config"`);
        await queryRunner.query(`ALTER TABLE "temporary_gameserver_config" RENAME TO "gameserver_config"`);
        await queryRunner.query(`DROP INDEX "IDX_b2c82e7f028dd0320e2cbae75c"`);
        await queryRunner.query(`CREATE TABLE "temporary_gameserver" ("id" varchar PRIMARY KEY NOT NULL, "authKey" varchar NOT NULL, "currentName" varchar NOT NULL DEFAULT (''), "description" varchar NOT NULL DEFAULT (''), "lastContact" datetime NOT NULL, "gameserverConfigGameserver" varchar, CONSTRAINT "UQ_80b9d4bb38444ac266a91b9cf59" UNIQUE ("gameserverConfigGameserver"), CONSTRAINT "FK_e1489f4b9c2a32ba0cdb3c70238" FOREIGN KEY ("gameserverConfigGameserver") REFERENCES "gameserver_config" ("gameserverId") ON DELETE SET NULL ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_gameserver"("id", "authKey", "currentName", "description", "lastContact", "gameserverConfigGameserver") SELECT "id", "authKey", "currentName", "description", "lastContact", "gameserverConfigGameserver" FROM "gameserver"`);
        await queryRunner.query(`DROP TABLE "gameserver"`);
        await queryRunner.query(`ALTER TABLE "temporary_gameserver" RENAME TO "gameserver"`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_b2c82e7f028dd0320e2cbae75c" ON "gameserver" ("authKey") `);
        await queryRunner.query(`DROP INDEX "idx_gameGameMode"`);
        await queryRunner.query(`DROP INDEX "idx_gameEndedAt"`);
        await queryRunner.query(`DROP INDEX "idx_gameStartedAt"`);
        await queryRunner.query(`CREATE TABLE "temporary_game" ("id" varchar PRIMARY KEY NOT NULL, "startedAt" datetime NOT NULL, "endedAt" datetime, "gameserverId" varchar NOT NULL, "mapId" integer NOT NULL, "gameModeId" integer NOT NULL, "matchConfigId" integer, CONSTRAINT "FK_97c8d66b4d906bb743fb0d81b93" FOREIGN KEY ("gameModeId") REFERENCES "game_mode" ("id") ON DELETE CASCADE ON UPDATE NO ACTION, CONSTRAINT "FK_e4a9c8d911c2aaeba97e368202b" FOREIGN KEY ("mapId") REFERENCES "server_map" ("id") ON DELETE CASCADE ON UPDATE NO ACTION, CONSTRAINT "FK_2373cf05d5aec448112acc93b73" FOREIGN KEY ("gameserverId") REFERENCES "gameserver" ("id") ON DELETE CASCADE ON UPDATE NO ACTION, CONSTRAINT "FK_466fe0a5a0188102b3fd889052f" FOREIGN KEY ("matchConfigId") REFERENCES "match_config" ("id") ON DELETE SET NULL ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_game"("id", "startedAt", "endedAt", "gameserverId", "mapId", "gameModeId", "matchConfigId") SELECT "id", "startedAt", "endedAt", "gameserverId", "mapId", "gameModeId", "matchConfigId" FROM "game"`);
        await queryRunner.query(`DROP TABLE "game"`);
        await queryRunner.query(`ALTER TABLE "temporary_game" RENAME TO "game"`);
        await queryRunner.query(`CREATE INDEX "idx_gameGameMode" ON "game" ("gameModeId") `);
        await queryRunner.query(`CREATE INDEX "idx_gameEndedAt" ON "game" ("endedAt") `);
        await queryRunner.query(`CREATE INDEX "idx_gameStartedAt" ON "game" ("startedAt") `);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`DROP INDEX "idx_gameStartedAt"`);
        await queryRunner.query(`DROP INDEX "idx_gameEndedAt"`);
        await queryRunner.query(`DROP INDEX "idx_gameGameMode"`);
        await queryRunner.query(`ALTER TABLE "game" RENAME TO "temporary_game"`);
        await queryRunner.query(`CREATE TABLE "game" ("id" varchar PRIMARY KEY NOT NULL, "startedAt" datetime NOT NULL, "endedAt" datetime, "gameserverId" varchar NOT NULL, "mapId" integer NOT NULL, "gameModeId" integer NOT NULL, "matchConfigId" integer, CONSTRAINT "FK_97c8d66b4d906bb743fb0d81b93" FOREIGN KEY ("gameModeId") REFERENCES "game_mode" ("id") ON DELETE CASCADE ON UPDATE NO ACTION, CONSTRAINT "FK_e4a9c8d911c2aaeba97e368202b" FOREIGN KEY ("mapId") REFERENCES "server_map" ("id") ON DELETE CASCADE ON UPDATE NO ACTION, CONSTRAINT "FK_2373cf05d5aec448112acc93b73" FOREIGN KEY ("gameserverId") REFERENCES "gameserver" ("id") ON DELETE CASCADE ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "game"("id", "startedAt", "endedAt", "gameserverId", "mapId", "gameModeId", "matchConfigId") SELECT "id", "startedAt", "endedAt", "gameserverId", "mapId", "gameModeId", "matchConfigId" FROM "temporary_game"`);
        await queryRunner.query(`DROP TABLE "temporary_game"`);
        await queryRunner.query(`CREATE INDEX "idx_gameStartedAt" ON "game" ("startedAt") `);
        await queryRunner.query(`CREATE INDEX "idx_gameEndedAt" ON "game" ("endedAt") `);
        await queryRunner.query(`CREATE INDEX "idx_gameGameMode" ON "game" ("gameModeId") `);
        await queryRunner.query(`DROP INDEX "IDX_b2c82e7f028dd0320e2cbae75c"`);
        await queryRunner.query(`ALTER TABLE "gameserver" RENAME TO "temporary_gameserver"`);
        await queryRunner.query(`CREATE TABLE "gameserver" ("id" varchar PRIMARY KEY NOT NULL, "authKey" varchar NOT NULL, "currentName" varchar NOT NULL DEFAULT (''), "description" varchar NOT NULL DEFAULT (''), "lastContact" datetime NOT NULL, "gameserverConfigGameserver" varchar, CONSTRAINT "UQ_80b9d4bb38444ac266a91b9cf59" UNIQUE ("gameserverConfigGameserver"))`);
        await queryRunner.query(`INSERT INTO "gameserver"("id", "authKey", "currentName", "description", "lastContact", "gameserverConfigGameserver") SELECT "id", "authKey", "currentName", "description", "lastContact", "gameserverConfigGameserver" FROM "temporary_gameserver"`);
        await queryRunner.query(`DROP TABLE "temporary_gameserver"`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_b2c82e7f028dd0320e2cbae75c" ON "gameserver" ("authKey") `);
        await queryRunner.query(`ALTER TABLE "gameserver_config" RENAME TO "temporary_gameserver_config"`);
        await queryRunner.query(`CREATE TABLE "gameserver_config" ("currentName" varchar NOT NULL, "voteLength" smallint NOT NULL, "gamePassword" varchar NOT NULL, "reservedSlots" smallint NOT NULL, "balanceClans" boolean NOT NULL, "allowSkipMapVote" boolean NOT NULL, "tempKickBanTime" smallint NOT NULL, "autoRecordReplay" boolean NOT NULL, "playerGameControl" boolean NOT NULL, "enableMapVote" boolean NOT NULL, "serverAdmins" varchar NOT NULL DEFAULT (''), "serverDescription" varchar NOT NULL DEFAULT (''), "website" varchar NOT NULL DEFAULT (''), "contact" varchar NOT NULL DEFAULT (''), "mapNoReplay" smallint NOT NULL, "enableVoicechat" boolean NOT NULL, "gameserverId" varchar PRIMARY KEY NOT NULL, "currentMatchConfigId" integer NOT NULL, CONSTRAINT "REL_e81629bd2734cc6621e92a8897" UNIQUE ("gameserverId"))`);
        await queryRunner.query(`INSERT INTO "gameserver_config"("currentName", "voteLength", "gamePassword", "reservedSlots", "balanceClans", "allowSkipMapVote", "tempKickBanTime", "autoRecordReplay", "playerGameControl", "enableMapVote", "serverAdmins", "serverDescription", "website", "contact", "mapNoReplay", "enableVoicechat", "gameserverId", "currentMatchConfigId") SELECT "currentName", "voteLength", "gamePassword", "reservedSlots", "balanceClans", "allowSkipMapVote", "tempKickBanTime", "autoRecordReplay", "playerGameControl", "enableMapVote", "serverAdmins", "serverDescription", "website", "contact", "mapNoReplay", "enableVoicechat", "gameserverId", "currentMatchConfigId" FROM "temporary_gameserver_config"`);
        await queryRunner.query(`DROP TABLE "temporary_gameserver_config"`);
        await queryRunner.query(`DROP INDEX "idx_ranked"`);
        await queryRunner.query(`ALTER TABLE "match_config" RENAME TO "temporary_match_config"`);
        await queryRunner.query(`CREATE TABLE "match_config" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "configName" varchar NOT NULL, "configHash" varchar NOT NULL, "matchEndLength" smallint NOT NULL, "warmUpLength" smallint NOT NULL, "friendlyFireScale" float NOT NULL, "mapLength" smallint NOT NULL, "roundLength" smallint NOT NULL, "preRoundLength" smallint NOT NULL, "roundEndLength" smallint NOT NULL, "roundLimit" smallint NOT NULL, "allowGhostcam" boolean NOT NULL, "playerVoteThreshold" float NOT NULL, "autoBalanceTeams" boolean NOT NULL, "playerVoteTeamOnly" boolean NOT NULL, "maxTeamDamage" float NOT NULL, "enablePlayerVote" boolean NOT NULL, "autoSwapTeams" boolean NOT NULL, "midGameBreakLength" smallint NOT NULL, "nadeRestriction" boolean NOT NULL, "globalVoicechat" boolean NOT NULL, "muteDeadToTeam" boolean NOT NULL, "ranked" boolean NOT NULL, "private" boolean NOT NULL, "gameModeId" integer NOT NULL, CONSTRAINT "UQ_fbbc00f440d3e086650663cfbc8" UNIQUE ("configName"))`);
        await queryRunner.query(`INSERT INTO "match_config"("id", "configName", "configHash", "matchEndLength", "warmUpLength", "friendlyFireScale", "mapLength", "roundLength", "preRoundLength", "roundEndLength", "roundLimit", "allowGhostcam", "playerVoteThreshold", "autoBalanceTeams", "playerVoteTeamOnly", "maxTeamDamage", "enablePlayerVote", "autoSwapTeams", "midGameBreakLength", "nadeRestriction", "globalVoicechat", "muteDeadToTeam", "ranked", "private", "gameModeId") SELECT "id", "configName", "configHash", "matchEndLength", "warmUpLength", "friendlyFireScale", "mapLength", "roundLength", "preRoundLength", "roundEndLength", "roundLimit", "allowGhostcam", "playerVoteThreshold", "autoBalanceTeams", "playerVoteTeamOnly", "maxTeamDamage", "enablePlayerVote", "autoSwapTeams", "midGameBreakLength", "nadeRestriction", "globalVoicechat", "muteDeadToTeam", "ranked", "private", "gameModeId" FROM "temporary_match_config"`);
        await queryRunner.query(`DROP TABLE "temporary_match_config"`);
        await queryRunner.query(`CREATE INDEX "idx_ranked" ON "match_config" ("ranked") `);
        await queryRunner.query(`DROP INDEX "idx_gameStartedAt"`);
        await queryRunner.query(`DROP INDEX "idx_gameEndedAt"`);
        await queryRunner.query(`DROP INDEX "idx_gameGameMode"`);
        await queryRunner.query(`ALTER TABLE "game" RENAME TO "temporary_game"`);
        await queryRunner.query(`CREATE TABLE "game" ("id" varchar PRIMARY KEY NOT NULL, "startedAt" datetime NOT NULL, "endedAt" datetime, "gameserverId" varchar NOT NULL, "mapId" integer NOT NULL, "gameModeId" integer NOT NULL, CONSTRAINT "FK_97c8d66b4d906bb743fb0d81b93" FOREIGN KEY ("gameModeId") REFERENCES "game_mode" ("id") ON DELETE CASCADE ON UPDATE NO ACTION, CONSTRAINT "FK_e4a9c8d911c2aaeba97e368202b" FOREIGN KEY ("mapId") REFERENCES "server_map" ("id") ON DELETE CASCADE ON UPDATE NO ACTION, CONSTRAINT "FK_2373cf05d5aec448112acc93b73" FOREIGN KEY ("gameserverId") REFERENCES "gameserver" ("id") ON DELETE CASCADE ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "game"("id", "startedAt", "endedAt", "gameserverId", "mapId", "gameModeId") SELECT "id", "startedAt", "endedAt", "gameserverId", "mapId", "gameModeId" FROM "temporary_game"`);
        await queryRunner.query(`DROP TABLE "temporary_game"`);
        await queryRunner.query(`CREATE INDEX "idx_gameStartedAt" ON "game" ("startedAt") `);
        await queryRunner.query(`CREATE INDEX "idx_gameEndedAt" ON "game" ("endedAt") `);
        await queryRunner.query(`CREATE INDEX "idx_gameGameMode" ON "game" ("gameModeId") `);
        await queryRunner.query(`DROP INDEX "IDX_b2c82e7f028dd0320e2cbae75c"`);
        await queryRunner.query(`ALTER TABLE "gameserver" RENAME TO "temporary_gameserver"`);
        await queryRunner.query(`CREATE TABLE "gameserver" ("id" varchar PRIMARY KEY NOT NULL, "authKey" varchar NOT NULL, "currentName" varchar NOT NULL DEFAULT (''), "description" varchar NOT NULL DEFAULT (''), "lastContact" datetime NOT NULL)`);
        await queryRunner.query(`INSERT INTO "gameserver"("id", "authKey", "currentName", "description", "lastContact") SELECT "id", "authKey", "currentName", "description", "lastContact" FROM "temporary_gameserver"`);
        await queryRunner.query(`DROP TABLE "temporary_gameserver"`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_b2c82e7f028dd0320e2cbae75c" ON "gameserver" ("authKey") `);
        await queryRunner.query(`DROP TABLE "gameserver_config"`);
        await queryRunner.query(`DROP INDEX "idx_ranked"`);
        await queryRunner.query(`DROP TABLE "match_config"`);
    }

}
